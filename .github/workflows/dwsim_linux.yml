# This is a basic workflow to help you get started with Actions

name: DWSIM_LINUX_RUNNER

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
  #    - name: directory
  #      run: powershell -command Get-Location
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: install packages
        run: |
          sudo apt update
          sudo apt-get install clang
          sudo apt-get install nuget
          sudo apt-get install git
          sudo apt-get install mono-basic
          wget https://netcologne.dl.sourceforge.net/project/dwsim/DWSIM/DWSIM%207.0/7.1.0/dwsim_7.1.0-amd64.deb
          sudo dpkg -i --force-all dwsim_7.1.0-amd64.deb
      - uses: actions/checkout@v2
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
           python-version: 3.8
      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           python -m pip install -U setuptools
           python -m pip install -U wheel
           python -m pip install -U pycparser --user
           python -m pip install -U git+https://github.com/pythonnet/pythonnet --user 
           python -m pip install -r requirements.txt
      # Runs a single command using the runners shell
      # Runs a set of commands using the runners shell
      - name: Run DWSIM automation
        run:  python DWSIM_linux_automation.py
