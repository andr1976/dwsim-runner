<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GemBox.Spreadsheet</name>
  </assembly>
  <members>
    <member name="T:GemBox.Spreadsheet.AbstractRange">
      <summary>
            Base class for classes representing one or more excel cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.Clear(GemBox.Spreadsheet.ClearOptions)">
      <summary>
            Clears the range (content, formatting, comment, hyperlink or all).
            </summary>
      <param name="options">The clear options.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Comment">
      <summary>
            Gets or sets comment.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Formula">
      <summary>
            Gets or sets formula string.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Hyperlink">
      <summary>
            Gets or sets hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if all cells in <see cref="T:GemBox.Spreadsheet.AbstractRange" /> have default cell style; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Name">
      <summary>
            Gets the name of <see cref="T:GemBox.Spreadsheet.AbstractRange" /> instance.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.SetBorders(GemBox.Spreadsheet.MultipleBorders,System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets borders on one or more excel cells, taking cell position into account.
            </summary>
      <param name="multipleBorders">Borders to set.</param>
      <param name="lineColor">Line color.</param>
      <param name="lineStyle">Line style.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Style">
      <summary>
            Gets or sets the cell formatting of one or more cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AbstractRange" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AbstractRange" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Value">
      <summary>
            Gets or sets cell value on one or more excel cells.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.AnchorCell">
      <summary>
            Represents an anchor cell object used in <see cref="T:GemBox.Spreadsheet.ExcelDrawingPosition" /> type to specify from which cell and to which cell drawing (picture, chart, etc.) spans.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class by using another anchor cell.
            </summary>
      <param name="anchorCell">Anchor cell to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="anchorCell" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class.
            </summary>
      <param name="column">The column where the anchor is placed.</param>
      <param name="row">The row where the anchor is placed.</param>
      <param name="topLeft">If set to <see langword="true" />, anchor will be placed in the top left corner of the cell in current column and current row; otherwise, anchor will be placed in the top-left corner of the cell in next column and next row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class by using offset values in arbitrary length unit.
            </summary>
      <param name="column">The column where the anchor is placed.</param>
      <param name="row">The row where the anchor is placed.</param>
      <param name="columnOffset">The column offset for the anchor in arbitrary length unit.</param>
      <param name="rowOffset">The row offset for the anchor in arbitrary length unit.</param>
      <param name="unit">The length unit in which <paramref name="columnOffset" /> and <paramref name="rowOffset" /> are specified.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> or <paramref name="row" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="column" /> and <paramref name="row" /> do not belong to the same worksheet.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Int64,System.Int64)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.AnchorCell" /> class by using offset values in EMU units  (1 point = 12 700 EMU).
            </summary>
      <param name="column">The column where the anchor is placed.</param>
      <param name="row">The row where the anchor is placed.</param>
      <param name="columnOffset">The column offset for the anchor.</param>
      <param name="rowOffset">The row offset for the anchor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> or <paramref name="row" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="column" /> and <paramref name="row" /> do not belong to the same worksheet.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.Column">
      <summary>
            Gets or sets the column for the anchor cell.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Column doesn't belong to the same worksheet as anchor cell row.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.ColumnOffset">
      <summary>
            Gets or sets the column offset for the anchor cell in EMU units (1 point = 12 700 EMU).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.Equals(GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.AnchorCell" /> is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <param name="other">The other anchor cell to compare with this anchor cell instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.AnchorCell" /> is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this anchor cell instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is an <see cref="T:GemBox.Spreadsheet.AnchorCell" /> and is equal to this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetColumnOffset(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the column offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="unit">The length unit in which to return column offset.</param>
      <returns>The column offset for the anchor cell in arbitrary length unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetRowOffset(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the row offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="unit">The length unit in which to return row offset.</param>
      <returns>The row offset for the anchor cell in arbitrary length unit.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.Row">
      <summary>
            Gets or sets the row for the anchor cell.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Row doesn't belong to the same worksheet as anchor cell column.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.RowOffset">
      <summary>
            Gets or sets row offset for the anchor cell in EMU units (1 point = 12 700 EMU).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.SetColumnOffset(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the column offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="value">The column offset value.</param>
      <param name="unit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.SetRowOffset(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the row offset for the anchor cell in arbitrary length unit.
            </summary>
      <param name="value">The row offset value.</param>
      <param name="unit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.AnchorCell" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.BuiltInCellStyleName">
      <summary>
            Represents a built-in style name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Normal">
      <summary>
            '<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel1">
      <summary>
            '<b>RowLevel_1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel2">
      <summary>
            '<b>RowLevel_2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel3">
      <summary>
            '<b>RowLevel_3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel4">
      <summary>
            '<b>RowLevel_4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel5">
      <summary>
            '<b>RowLevel_5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel6">
      <summary>
            '<b>RowLevel_6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.RowLevel7">
      <summary>
            '<b>RowLevel_7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel1">
      <summary>
            '<b>ColLevel_1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel2">
      <summary>
            '<b>ColLevel_2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel3">
      <summary>
            '<b>ColLevel_3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel4">
      <summary>
            '<b>ColLevel_4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel5">
      <summary>
            '<b>ColLevel_5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel6">
      <summary>
            '<b>ColLevel_6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ColLevel7">
      <summary>
            '<b>ColLevel_7</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Comma">
      <summary>
            '<b>Comma</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Currency">
      <summary>
            '<b>Currency</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Percent">
      <summary>
            '<b>Percent</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Comma0">
      <summary>
            '<b>Comma [0]</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Currency0">
      <summary>
            '<b>Currency [0]</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Hyperlink">
      <summary>
        <b>Hyperlink</b> built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.FollowedHyperlink">
      <summary>
        <b>Followed Hyperlink</b> built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Note">
      <summary>
        <b>Note</b> built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.WarningText">
      <summary>
            '<b>Warning Text</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Title">
      <summary>
            '<b>Title</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading1">
      <summary>
            '<b>Heading 1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading2">
      <summary>
            '<b>Heading 2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading3">
      <summary>
            '<b>Heading 3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading4">
      <summary>
            '<b>Heading 4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Input">
      <summary>
            '<b>Input</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Output">
      <summary>
            '<b>Output</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Calculation">
      <summary>
            '<b>Calculation</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.CheckCell">
      <summary>
            '<b>Check Cell</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.LinkedCell">
      <summary>
            '<b>Linked Cell</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Total">
      <summary>
            '<b>Total</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Good">
      <summary>
            '<b>Good</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Bad">
      <summary>
            '<b>Bad</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Neutral">
      <summary>
            '<b>Neutral</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1">
      <summary>
            '<b>Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1Pct20">
      <summary>
            '<b>20% - Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1Pct40">
      <summary>
            '<b>40% - Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent1Pct60">
      <summary>
            '<b>60% - Accent1</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2">
      <summary>
            '<b>Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2Pct20">
      <summary>
            '<b>20% - Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2Pct40">
      <summary>
            '<b>40% - Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent2Pct60">
      <summary>
            '<b>60% - Accent2</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3">
      <summary>
            '<b>Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3Pct20">
      <summary>
            '<b>20% - Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3Pct40">
      <summary>
            '<b>40% - Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent3Pct60">
      <summary>
            '<b>60% - Accent3</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4">
      <summary>
            '<b>Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4Pct20">
      <summary>
            '<b>20% - Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4Pct40">
      <summary>
            '<b>40% - Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent4Pct60">
      <summary>
            '<b>60% - Accent4</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5">
      <summary>
            '<b>Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5Pct20">
      <summary>
            '<b>20% - Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5Pct40">
      <summary>
            '<b>40% - Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent5Pct60">
      <summary>
            '<b>60% - Accent5</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6">
      <summary>
            '<b>Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6Pct20">
      <summary>
            '<b>20% - Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6Pct40">
      <summary>
            '<b>40% - Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Accent6Pct60">
      <summary>
            '<b>60% - Accent6</b>' built-in style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ExplanatoryText">
      <summary>
            '<b>Explanatory Text</b>' built-in style.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.BuiltInDocumentProperties">
      <summary>
            Enumeration of available built-in document properties.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Title">
      <summary>
            Title of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Author">
      <summary>
            Name of the document's author.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Subject">
      <summary>
            Subject of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Comments">
      <summary>
            Document comments.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Category">
      <summary>
            Category of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Status">
      <summary>
            Status of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Keywords">
      <summary>
            Document keywords.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.LastSavedBy">
      <summary>
            Name of the last author.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Manager">
      <summary>
            Manager.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Company">
      <summary>
            Company.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.HyperlinkBase">
      <summary>
            Base hyperlink.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellBorder">
      <summary>
            Represents the color and line style for the single border of a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorder.LineColor">
      <summary>
        <para>Gets or sets the border line color.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorder.LineStyle">
      <summary>
        <para>Gets or sets the line style for this <see cref="T:GemBox.Spreadsheet.CellBorder" />.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.LineStyle.None" />.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorder.SetBorder(GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets the border color and line style.
            </summary>
      <param name="lineColor">The border line color.</param>
      <param name="lineStyle">The line style.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorder.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorder" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorder" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.CellBorders">
      <summary>
            Represents a single set of cell border formats (left, right, top, bottom and diagonal).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorders.Item(GemBox.Spreadsheet.IndividualBorder)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.
            </summary>
      <param name="individualBorder">The individual border for which to get the color and line style.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.CellBorder" /> which contains the color and line style for the specified individual border of a cell.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorders.SetBorders(GemBox.Spreadsheet.MultipleBorders,GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets the color and line style for the specified multiple borders of a cell.
            </summary>
      <param name="multipleBorders">The multiple borders for which to set the color and line style.</param>
      <param name="lineColor">The border line color.</param>
      <param name="lineStyle">The line style.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorders.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorders" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellBorders" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRange">
      <summary>
            Cell range is a rectangular group of worksheet cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Comment">
      <summary>
            Gets or sets comment
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32)">
      <summary>
            Copies this cell range to another worksheet.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <exception cref="T:System.ArgumentNullException">Destination worksheet is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Copies this cell range to another worksheet.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="topLeftCell">Full name of the top-left cell of the destination range.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.Int32,System.Int32)">
      <summary>
            Copies this cell range to another position in the same worksheet.
            </summary>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.String)">
      <summary>
            Copies this cell range to another position in the same worksheet.
            </summary>
      <param name="topLeftCell">Full name of the top-left cell of the destination range.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.EndPosition">
      <summary>
            Gets name of the last (bottom-right) cell in this cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.CellRange" /> and is equal to this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Boolean,System.Boolean,System.Int32@,System.Int32@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Test to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="matchEntireCellContents">
        <see langword="true" /> to match entire cell contents, <see langword="false" /> otherwise.</param>
      <param name="row">Index of the row where the text was found or -1 if no text was found.</param>
      <param name="column">Index of the column where the text was found or -1 if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex">
      <summary>
            Gets index of the first (leftmost) column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FirstRowIndex">
      <summary>
            Gets index of the first (topmost) row.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Formula">
      <summary>
            Gets or sets formula string.
            </summary>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range 
            which is not merged.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.CellRange" /> instance.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetReadEnumerator">
      <summary>
            Returns enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (only allocated cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (only allocated cells).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)">
      <summary>
            Returns new cell range using start and end position.
            </summary>
      <param name="firstCell">Name of first (top-left) cell.</param>
      <param name="lastCell">Name of last (bottom-right) cell.</param>
      <returns>New cell range using start and end position.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns new cell range using absolute indexing.
            </summary>
      <param name="firstAbsoluteRow">Absolute index of the first row.</param>
      <param name="firstAbsoluteColumn">Absolute index of the first column.</param>
      <param name="lastAbsoluteRow">Absolute index of the last row.</param>
      <param name="lastAbsoluteColumn">Absolute index of the last column.</param>
      <returns>New cell range using absolute indexing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns new cell range using relative indexing.
            </summary>
      <param name="relativeRow">Relative index of the first row.</param>
      <param name="relativeColumn">Relative index of the first column.</param>
      <param name="width">Width of new cell range in columns.</param>
      <param name="height">Height of new cell range in rows.</param>
      <returns>New cell range using relative indexing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Height">
      <summary>
            Gets height of this cell range, in rows.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Hyperlink">
      <summary>
            Gets or sets hyperlink
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IndexingMode">
      <summary>
            Gets indexing mode used for cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IsAnyCellMerged">
      <summary>
            Returns <see langword="true" /> is any cell in this cell range is merged; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.Int32)">
      <summary>
            Gets excel cell at the specified index.
            </summary>
      <param name="contextIndex">The zero-based context index of the cell.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.Int32,System.Int32)">
      <summary>
            Gets excel cell at the specified relative position.
            </summary>
      <param name="relativeRow">The zero-based relative row position.</param>
      <param name="relativeColumn">The zero-based relative column position.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.String)">
      <summary>
            Gets excel cell with the specified full or partial name.
            </summary>
      <param name="contextName">Full or partial name of the cell.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.LastColumnIndex">
      <summary>
            Gets index of the last (rightmost) column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.LastRowIndex">
      <summary>
            Gets index of the last (bottommost) row.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Merged">
      <summary>
            Gets or sets whether cells in this range are merged.
            </summary>
      <exception cref="T:System.ArgumentException">Merged range can't be created because some of the cells
            in the range are already merged.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.op_Equality(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.CellRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.op_Inequality(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.CellRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.CellRange" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Overlaps(GemBox.Spreadsheet.CellRange)">
      <summary>
            Checks if this cell range overlaps with another cell range.
            </summary>
      <param name="range">Cell range.</param>
      <returns>
        <see langword="true" /> if cell ranges overlap; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="range" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.PositionToRowColumn(System.String,System.Int32@,System.Int32@)">
      <summary>
            Converts position string ("A1", "BN27", etc.) to row and column index.
            </summary>
      <param name="position">Position string.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.RowColumnToPosition(System.Int32,System.Int32)">
      <summary>
            Converts row and column index to position string ("A1", "BN27", etc.).
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Position string.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(GemBox.Spreadsheet.SortDescription[])">
      <summary>
            Sorts the rows of this <see cref="T:GemBox.Spreadsheet.CellRange" /> by comparing values of <see cref="T:GemBox.Spreadsheet.ExcelCell" />s in columns specified by <paramref name="sortDescriptions" />.
            </summary>
      <param name="sortDescriptions">The sort descriptions that specify columns by which to sort.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})">
      <summary>
            Sorts the rows of this <see cref="T:GemBox.Spreadsheet.CellRange" /> by comparing values of <see cref="T:GemBox.Spreadsheet.ExcelCell" />s in columns specified by <paramref name="sortDescriptions" />.
            </summary>
      <param name="sortDescriptions">The sort descriptions that specify columns by which to sort.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.StartPosition">
      <summary>
            Gets name of the first (top-left) cell in this cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Value">
      <summary>
            Gets or sets cell value on one or more excel cells.
            </summary>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range 
            which is not merged.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Width">
      <summary>
            Gets width of this cell range, in columns.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRangeCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.CellRange" /> items.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeCollection.Add(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Adds the <see cref="T:GemBox.Spreadsheet.CellRange" /> from the specified worksheet to the collection.
            </summary>
      <param name="worksheet">The worksheet.</param>
      <param name="cellReference">The cell reference for which to create <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>An instance of the <see cref="T:GemBox.Spreadsheet.CellRange" /> that was added to the collection.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRangeEnumerator">
      <summary>
            Enumerator used for iterating cells in a <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.Current">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentCell">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentColumn">
      <summary>
            Current absolute column index in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentRow">
      <summary>
            Current absolute row index in the cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.MoveNext">
      <summary>
            Advances the enumerator to the next element of the cell range.
            </summary>
      <returns>
        <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if 
            the enumerator has passed the end of the cell range.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.Parent">
      <summary>
            Parent <see cref="T:GemBox.Spreadsheet.CellRange" />. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.Reset">
      <summary>
            Sets the enumerator to its initial position, which is one column before 
            the first cell in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.System#Collections#IEnumerator#Current">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellStyle">
      <summary>
            Represents cell formatting.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CellStyle" /> class not associated with any workbook.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.#ctor(GemBox.Spreadsheet.ExcelFile)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CellStyle" /> class which references default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) style from the specified workbook.
            </summary>
      <param name="workbook">The workbook from which default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) style this <see cref="T:GemBox.Spreadsheet.CellStyle" /> inherits formatting.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Borders">
      <summary>
        <para>Gets or sets the borders.</para>
        <para>If set to <see langword="null" />, borders will be resolved from referenced workbook style.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.FillPattern">
      <summary>
        <para>Gets or sets the fill (cell background).</para>
        <para>If set to <see langword="null" />, fill will be resolved from referenced workbook style.</para>
        <para>Fill can be either pattern or gradient.</para>
        <para>Gradient fill is currently supported in XLSX and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Font">
      <summary>
        <para>Gets or sets the font.</para>
        <para>If set to <see langword="null" />, font will be resolved from referenced workbook style.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.FormulaHidden">
      <summary>
        <para>Gets or sets a value indicating whether the contents of the cell will not be displayed in the formula bar.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment">
      <summary>
        <para>Gets or sets the horizontal alignment.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Indent">
      <summary>
        <para>Gets or sets the number of spaces (of the <b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b> style font) of indentation for text in a cell.</para>
        <para>The number of spaces to indent is calculated as following: Number of spaces to indent = <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" /> * 3.</para>
        <para>Default value is 0.</para>
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be greater than or equal to 0.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.IsDefault">
      <summary>
            Gets a value indicating whether the referenced workbook style is default (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>) and there are no additional modifications of cell formatting.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.IsTextVertical">
      <summary>
        <para>Gets or sets a value indicating whether text orientation is vertical.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Locked">
      <summary>
        <para>Gets or sets a value indicating whether the cell is locked.</para>
        <para>Default value is <see langword="true" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Name">
      <summary>
        <para>If <see cref="T:GemBox.Spreadsheet.CellStyle" /> is workbook <see cref="T:GemBox.Spreadsheet.Style" />, gets or sets the name of the style; otherwise, gets the name of the referenced workbook <see cref="T:GemBox.Spreadsheet.Style" /> from which this <see cref="T:GemBox.Spreadsheet.CellStyle" /> inherits formatting.</para>
        <para>Default value is <b>Normal</b>.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.NumberFormat">
      <summary>
        <para>Gets or sets the number format which indicates how to format and render the numeric value of a cell.</para>
        <para>Default value is <b>General</b>.</para>
        <para>If set to <see langword="null" />, number format will be resolved from referenced workbook style.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.QuotePrefix">
      <summary>
        <para>Gets or sets a value indicating whether the text string in a cell should be prefixed by a single quote mark (e.g., 'text). Use it to store numeric value of a cell as text.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Rotation">
      <summary>
        <para>Gets or sets the text rotation in degrees (1/360th of a full circle).</para>
        <para>Value must be between -90 and 90 and specifies counterclockwise rotation of the text from the normal position. The first letter of the text is considered the center-point of the arc.</para>
        <para>Default value is 0.</para>
        <para>This member is currently not supported in PDF, XPS and image file formats.</para>
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be between -90 and 90.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit">
      <summary>
        <para>Gets or sets a value indicating whether the displayed text in the cell should be shrunk to fit the cell width. Not applicable when a cell contains multiple lines of text.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment">
      <summary>
        <para>Gets or sets the vertical alignment.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Bottom" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.WrapText">
      <summary>
        <para>Gets or sets a value indicating whether the text in a cell should be line-wrapped within the cell.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellStyleCollection">
      <summary>
            Represents a collection of workbook (master) <see cref="T:GemBox.Spreadsheet.Style" />s.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Add(System.String)">
      <summary>
            Adds an empty <see cref="T:GemBox.Spreadsheet.Style" /> instance to the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </summary>
      <param name="name">The name of new <see cref="T:GemBox.Spreadsheet.Style" /> instance.</param>
      <returns>
            New <see cref="T:GemBox.Spreadsheet.Style" /> instance that is added to this collection.
            </returns>
      <exception cref="T:System.ArgumentException">Parameter <paramref name="name" /> cannot be null or empty.</exception>
      <exception cref="T:System.InvalidOperationException">Style with name <paramref name="name" /> is already contained in the workbook.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Contains(System.String)">
      <summary>
            Determines whether the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> contains a <see cref="T:GemBox.Spreadsheet.Style" /> instance with specific name.
            </summary>
      <param name="styleName">Name of the <see cref="T:GemBox.Spreadsheet.Style" /> to locate in the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.Style" /> instance with specific name is found in the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.Style" />s contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1">IEnumerator&lt;Style&gt;</see> that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Item(GemBox.Spreadsheet.BuiltInCellStyleName)">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" />.</para>
        <para>If <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> doesn't contain correspondent style, then new style will be added and returned.</para>
      </summary>
      <param name="styleName">The <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> of the <see cref="T:GemBox.Spreadsheet.Style" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given name.</para>
        <para>If <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> doesn't contain correspondent style, then new style will be added and returned.</para>
      </summary>
      <param name="styleName">The name of the <see cref="T:GemBox.Spreadsheet.Style" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Style" /> that corresponds to given name.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Normal">
      <summary>
            Gets the '<b>Normal</b>' style.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Remove(GemBox.Spreadsheet.BuiltInCellStyleName)">
      <summary>
            Removes built-in style with the specified name from the workbook.
            </summary>
      <param name="name">The name of the built-in style which should be removed from the workbook.</param>
      <returns>
        <see langword="true" /> if style is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if style was not found in the workbook.</returns>
      <exception cref="T:System.InvalidOperationException">'<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>' style cannot be removed from the workbook.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Remove(System.String)">
      <summary>
            Removes style with the specified name from the workbook.
            </summary>
      <param name="name">The name of the style which should be removed from the workbook.</param>
      <returns>
        <see langword="true" /> if style is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if style was not found in the workbook.</returns>
      <exception cref="T:System.InvalidOperationException">'<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b>' style cannot be removed from the workbook.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.CellValueType">
      <summary>
            Represents the possible cell value types.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Null">
      <summary>
            Blank cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Bool">
      <summary>
             Cell value is boolean.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Int">
      <summary>
            Cell value is integer.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Double">
      <summary>
            Cell value is double.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.DateTime">
      <summary>
            Cell value is date-time.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.String">
      <summary>
            Cell value is string.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CellValueType.Object">
      <summary>
            A general type representing any reference or value type 
            not explicitly represented by another CellValueType.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ClearOptions">
      <summary>
            Specifies the clear options.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Content">
      <summary>
            Clears the cell content.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Format">
      <summary>
            Clears the cell formatting.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Comment">
      <summary>
            Clears the cell comment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.Hyperlink">
      <summary>
            Clears the cell hyperlink.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ClearOptions.All">
      <summary>
            Clears everything (content, formatting, comment and hyperlink).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ColorName">
      <summary>
            Represents a color name of colors available in <b>MS Excel</b> user interface.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Empty">
      <summary>
            No color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Automatic">
      <summary>
        <para>
          <b>Automatic</b> color.</para>
        <para>For <see cref="P:GemBox.Spreadsheet.ExcelFont.Color" />, <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> and <see cref="P:GemBox.Spreadsheet.CellBorder.LineColor" /> properties, automatic color is equal to <see cref="P:System.Drawing.SystemColors.WindowText" />.</para>
        <para>For <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" />, <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor1" />, <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor2" /> and <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.TabColor" /> properties,  automatic color is equal to <see cref="P:System.Drawing.SystemColors.Window" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1">
      <summary>
            '<b>Background 1</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker5Pct">
      <summary>
            '<b>Background 1, Darker 5%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker15Pct">
      <summary>
            '<b>Background 1, Darker 15%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker25Pct">
      <summary>
            '<b>Background 1, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker35Pct">
      <summary>
            '<b>Background 1, Darker 35%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background1Darker50Pct">
      <summary>
            '<b>Background 1, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1">
      <summary>
            '<b>Text 1</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter50Pct">
      <summary>
            '<b>Text 1, Lighter 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter35Pct">
      <summary>
            '<b>Text 1, Lighter 35%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter25Pct">
      <summary>
            '<b>Text 1, Lighter 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter15Pct">
      <summary>
            '<b>Text 1, Lighter 15%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text1Lighter5Pct">
      <summary>
            '<b>Text 1, Lighter 5%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2">
      <summary>
            '<b>Background 2</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker10Pct">
      <summary>
            '<b>Background 2, Darker 10%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker25Pct">
      <summary>
            '<b>Background 2, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker50Pct">
      <summary>
            '<b>Background 2, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker75Pct">
      <summary>
            '<b>Background 2, Darker 75%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Background2Darker90Pct">
      <summary>
            '<b>Background 2, Darker 90%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2">
      <summary>
            '<b>Text 2</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Lighter80Pct">
      <summary>
            '<b>Text 2, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Lighter60Pct">
      <summary>
            '<b>Text 2, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Lighter40Pct">
      <summary>
            '<b>Text 2, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Darker25Pct">
      <summary>
            '<b>Text 2, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Text2Darker50Pct">
      <summary>
            '<b>Text 2, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1">
      <summary>
            '<b>Accent 1</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Lighter80Pct">
      <summary>
            '<b>Accent 1, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Lighter60Pct">
      <summary>
            '<b>Accent 1, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Lighter40Pct">
      <summary>
            '<b>Accent 1, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Darker25Pct">
      <summary>
            '<b>Accent 1, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent1Darker50Pct">
      <summary>
            '<b>Accent 1, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2">
      <summary>
            '<b>Accent 2</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Lighter80Pct">
      <summary>
            '<b>Accent 2, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Lighter60Pct">
      <summary>
            '<b>Accent 2, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Lighter40Pct">
      <summary>
            '<b>Accent 2, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Darker25Pct">
      <summary>
            '<b>Accent 2, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent2Darker50Pct">
      <summary>
            '<b>Accent 2, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3">
      <summary>
            '<b>Accent 3</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Lighter80Pct">
      <summary>
            '<b>Accent 3, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Lighter60Pct">
      <summary>
            '<b>Accent 3, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Lighter40Pct">
      <summary>
            '<b>Accent 3, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Darker25Pct">
      <summary>
            '<b>Accent 3, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent3Darker50Pct">
      <summary>
            '<b>Accent 3, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4">
      <summary>
            '<b>Accent 4</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Lighter80Pct">
      <summary>
            '<b>Accent 4, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Lighter60Pct">
      <summary>
            '<b>Accent 4, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Lighter40Pct">
      <summary>
            '<b>Accent 4, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Darker25Pct">
      <summary>
            '<b>Accent 4, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent4Darker50Pct">
      <summary>
            '<b>Accent 4, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5">
      <summary>
            '<b>Accent 5</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Lighter80Pct">
      <summary>
            '<b>Accent 5, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Lighter60Pct">
      <summary>
            '<b>Accent 5, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Lighter40Pct">
      <summary>
            '<b>Accent 5, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Darker25Pct">
      <summary>
            '<b>Accent 5, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent5Darker50Pct">
      <summary>
            '<b>Accent 5, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6">
      <summary>
            '<b>Accent 6</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Lighter80Pct">
      <summary>
            '<b>Accent 6, Lighter 80%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Lighter60Pct">
      <summary>
            '<b>Accent 6, Lighter 60%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Lighter40Pct">
      <summary>
            '<b>Accent 6, Lighter 40%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Darker25Pct">
      <summary>
            '<b>Accent 6, Darker 25%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Accent6Darker50Pct">
      <summary>
            '<b>Accent 6, Darker 50%</b>' theme color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Black">
      <summary>
            '<b>Black</b>' standard color (R = 0, G = 0, B = 0, ARGB = 0xFF000000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.White">
      <summary>
            '<b>White</b>' standard color (R = 255, G = 255, B = 255, ARGB = 0xFFFFFFFF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.DarkRed">
      <summary>
            '<b>Dark Red</b>' standard color (R = 192, G = 0, B = 0, ARGB = 0xFFC00000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Red">
      <summary>
            '<b>Red</b>' standard color (R = 255, G = 0, B = 0, ARGB = 0xFFFF0000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Orange">
      <summary>
            '<b>Orange</b>' standard color (R = 255, G = 192, B = 0, ARGB = 0xFFFFC000).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Yellow">
      <summary>
            '<b>Yellow</b>' standard color (R = 255, G = 255, B = 0, ARGB = 0xFFFFFF00).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.LightGreen">
      <summary>
            '<b>Light Green</b>' standard color (R = 146, G = 208, B = 80, ARGB = 0xFF92D050).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Green">
      <summary>
            '<b>Green</b>' standard color (R = 0, G = 176, B = 80, ARGB = 0xFF00B050).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.LightBlue">
      <summary>
            '<b>Light Blue</b>' standard color (R = 0, G = 176, B = 240, ARGB = 0xFF00B0F0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Blue">
      <summary>
            '<b>Blue</b>' standard color (R = 0, G = 112, B = 192, ARGB = 0xFF0070C0).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.DarkBlue">
      <summary>
            '<b>Dark Blue</b>' standard color (R = 0, G = 32, B = 96, ARGB = 0xFF002060).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColorName.Purple">
      <summary>
            '<b>Purple</b>' standard color (R = 112, G = 48, B = 160, ARGB = 0xFF7030A0).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ColumnTypeResolution">
      <summary>
            Defines resolution method that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.Object">
      <summary>
            All columns will be of type <see cref="T:System.Object" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.StringInvariantCulture">
      <summary>
            All columns  will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.InvariantCulture">
            invariant culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.StringCurrentCulture">
      <summary>
            All columns  will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.CurrentCulture">
            current culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.Auto">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.Object" />. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.AutoPreferStringInvariantCulture">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.InvariantCulture">
            invariant culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.AutoPreferStringCurrentCulture">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.CurrentCulture">
            current culture</see> will be used.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ComHelper">
      <summary>
            Contains methods that can be useful for users which are calling GemBox.Spreadsheet component using COM interop.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ComHelper" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.ComSetLicense(System.String)">
      <summary>
            Call this method from your application to set GemBox.Spreadsheet serial key.
            </summary>
      <param name="serialKey">Serial key.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CreateDataTableOptions">
      <summary>
            Represents options creating <see cref="T:System.Data.DataTable" /> and filling it with values from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to use first row of extracted data for column headers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnIndexes">
      <summary>
            Gets a list of indexes of columns which will be extracted.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ExtractDataOptions">
      <summary>
            Gets or sets <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.ExtractDataOptions" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfColumns">
      <summary>
            Gets or sets the number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.Resolution">
      <summary>
            Gets or sets the resolution type that specifies how column types will be resolved in created <see cref="T:System.Data.DataTable" />,
            see <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvLoadOptions">
      <summary>
            Represents options for loading from Character Separated Values file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.#ctor(GemBox.Spreadsheet.CsvType)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /> class.
            </summary>
      <param name="csvType">Value delimiter, <see cref="T:GemBox.Spreadsheet.CsvType" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /> class.
            </summary>
      <param name="separator">Character that will serve as value delimiter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.AllowNewLineInQuotes">
      <summary>
            Gets or sets a value indicating whether a new line character can be inside quotes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseFormatProvider">
      <summary>
            Gets or sets the format provider for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading CSV file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Separator">
      <summary>
            Gets or sets character that serves as value delimiter.
            </summary>
      <exception cref="T:System.ArgumentException">Value is set to quote '"' or new line '\n'.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Type">
      <summary>
            Gets or sets value delimiter type, see <see cref="T:GemBox.Spreadsheet.CsvType" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvSaveOptions">
      <summary>
            Represents options for saving to Character Separated Values file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.#ctor(GemBox.Spreadsheet.CsvType)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /> class.
            </summary>
      <param name="csvType">Value delimiter, <see cref="T:GemBox.Spreadsheet.CsvType" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /> class.
            </summary>
      <param name="separator">Character that will serve as value delimiter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.AlwaysQuoteValues">
      <summary>
            Gets or sets a value indicating whether values in CSV file will always be quoted. Default value is false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.ContentType">
      <summary>
            Gets the content-type for CSV file format:
            <list type="bullet"><item><description><b>"text/tab-separated-values; charset=" + <see cref="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b> if <see cref="P:GemBox.Spreadsheet.CsvSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.CsvType.TabDelimited" />, otherwise</description></item><item><description><b>"text/csv; charset=" + <see cref="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b>.</description></item></list></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to CSV file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Separator">
      <summary>
            Gets or sets character that serves as value delimiter.
            </summary>
      <exception cref="T:System.ArgumentException">Value is set to quote '"' or new line '\n'.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Type">
      <summary>
            Gets or sets value delimiter type, see <see cref="T:GemBox.Spreadsheet.CsvType" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvType">
      <summary>
            Formatting type for CSV files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.CommaDelimited">
      <summary>
            Comma delimited CSV (most frequently used). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.SemicolonDelimited">
      <summary>
            Semicolon delimited CSV (used by Excel if current culture specifies comma as decimal separator).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.TabDelimited">
      <summary>
            Tab delimited CSV.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs">
      <summary>
            Arguments for <see cref="E:GemBox.Spreadsheet.InsertDataTableOptions.DataTableCellToExcelCellConverting" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable">
      <summary>
            Gets the source <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" /></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableColumnIndex">
      <summary>
            Gets the source column index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableRowIndex">
      <summary>
            Gets the source row index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableValue">
      <summary>
            Gets the source value from <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCellValue">
      <summary>
            Gets or sets the value which will be inserted into destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidation">
      <summary>
            A single item of data validation defined on ranges of the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.CellRange[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified cell ranges on which this data validation will be applied.
            </summary>
      <param name="cellRanges">The cell ranges on which this data validation will be applied.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified worksheet and cell references on which this data validation will be applied.
            </summary>
      <param name="worksheet">The worksheet that will be used to initialize <see cref="T:GemBox.Spreadsheet.CellRange" />s that will be added to the <see cref="P:GemBox.Spreadsheet.DataValidation.CellRanges" /> collection of this data validation.</param>
      <param name="cellReferences">The cell references from which to create <see cref="T:GemBox.Spreadsheet.CellRange" />s.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified worksheet and cell references on which this data validation will be applied.
            </summary>
      <param name="worksheet">The worksheet that will be used to initialize <see cref="T:GemBox.Spreadsheet.CellRange" />s that will be added to the <see cref="P:GemBox.Spreadsheet.DataValidation.CellRanges" /> collection of this data validation.</param>
      <param name="cellReferences">The cell references from which to create <see cref="T:GemBox.Spreadsheet.CellRange" />s.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.CellRange})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified cell ranges on which this data validation will be applied.
            </summary>
      <param name="cellRanges">The cell ranges on which this data validation will be applied.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.CellRanges">
      <summary>
            Gets the ranges over which data validation is applied.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorMessage">
      <summary>
            Gets or sets the message text of error alert.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorStyle">
      <summary>
            Gets or sets the style of error alert used for this data validation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorTitle">
      <summary>
            Gets or sets the title bar text of error alert.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Formula1">
      <summary>
            Gets or sets the first formula in the DataValidation dropdown.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Formula2">
      <summary>
            Gets or sets the second formula in the DataValidation dropdown.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.IgnoreBlank">
      <summary>
            Gets or sets a value indicating whether the data validation treats empty or blank entries as 
            valid. <see langword="true" /> means empty entries are OK and do not violate the validation constraints.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InCellDropdown">
      <summary>
            Gets or sets a value indicating whether to display the dropdown combo box for a <see cref="F:GemBox.Spreadsheet.DataValidationType.List" /> data validation type.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InputMessage">
      <summary>
            Gets or sets the message text of input prompt.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InputMessageTitle">
      <summary>
            Gets or sets the title bar text of input prompt.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Operator">
      <summary>
            Gets or sets the relational operator used with this data validation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ShowErrorAlert">
      <summary>
            Gets or sets a value indicating whether to display the error alert message when an invalid
            value has been entered, according to the criteria specified.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ShowInputMessage">
      <summary>
            Gets or sets a value indicating whether to display the input prompt message.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Type">
      <summary>
            Gets or sets the type of data validation.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.DataValidation" /> items.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationErrorStyle">
      <summary>
            The style of data validation error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Stop">
      <summary>
            This data validation error style uses a stop icon in the error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Warning">
      <summary>
            This data validation error style uses a warning icon in the error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Information">
      <summary>
            This data validation error style uses an information icon in the error alert.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationOperator">
      <summary>
            The relational operator used in data validation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.Between">
      <summary>
            Data validation which checks if a value is between two other values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.NotBetween">
      <summary>
            Data validation which checks if a value is not between two other values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.Equal">
      <summary>
            Data validation which checks if a value is equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.NotEqual">
      <summary>
            Data validation which checks if a value is not equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.LessThan">
      <summary>
            Data validation which checks if a value is less than a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.LessThanOrEqual">
      <summary>
            Data validation which checks if a value is less than or equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThan">
      <summary>
            Data validation which checks if a value is greater than a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThanOrEqual">
      <summary>
            Data validation which checks if a value is greater than or equal to a specified value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationType">
      <summary>
            Specifies the type of data validation used to validate user input.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.None">
      <summary>
            No data validation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.WholeNumber">
      <summary>
            Data validation which checks for whole number values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Decimal">
      <summary>
            Data validation which checks for decimal values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.List">
      <summary>
            Data validation which checks for a value matching one of list of values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Date">
      <summary>
            Data validation which checks for date values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Time">
      <summary>
            Data validation which checks for time values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.TextLength">
      <summary>
            Data validation which checks for text values, whose length satisfies the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Custom">
      <summary>
            Data validation which uses a custom formula to check the cell value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DefinedName">
      <summary>
            Defined name class describes defined name that is not directly related with one cell range.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.LocalSheetIndex">
      <summary>
            Gets or sets the local sheet index of the defined name.
            If the local sheet index is -1, defined name is global.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.Name">
      <summary>
            Gets or sets the name of the defined name object.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedName.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DefinedName" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.DefinedName" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.Value">
      <summary>
            Gets or sets the value of the defined name.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DefinedNameCollection">
      <summary>
            Collection of defined names that are not directly related with one cell range.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.AddDefinedName(System.String,System.String,System.Int32)">
      <summary>
            Adds defined name to collection and returns index of that defined name.
            </summary>
      <param name="name">Name of the defined name.</param>
      <param name="value">Range string.</param>
      <param name="localSheetIndex">Local sheet index. If the value is -1, defined name is global.</param>
      <returns>Index of the defined name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.Clear">
      <summary>
            Removes all elements from defined names collection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Count">
      <summary>
            Returns the number of defined names in collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection. 
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection. 
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Item(System.Int32)">
      <summary>
            Gets or sets defined name described by index from collection.
            </summary>
      <param name="index">Index of the defined name.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Item(System.String)">
      <summary>
            Gets defined name described by name from collection.
            </summary>
      <param name="definedName">Name of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.RemoveDefinedName(System.String)">
      <summary>
            Removes the defined name described by name from collection.
            </summary>
      <param name="definedName">Name of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.RemoveDefinedNameAt(System.Int32)">
      <summary>
            Removes the defined name described by index from collection.
            </summary>
      <param name="index">Index of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> for the collection. 
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> for the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.DocumentProperties">
      <summary>
            Contains a collection of built-in and custom document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.BuiltIn">
      <summary>
            Gets a collection of built-in document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.Custom">
      <summary>
            Gets a collection of custom document properties.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DocumentProperties.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.DocumentProperties" />.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.DocumentProperties" />.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCell">
      <summary>
            Excel cell provides access to a single worksheet cell or to a merged range if the cell is merged.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.BoolValue">
      <summary>
            Gets the boolean value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The boolean value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Column">
      <summary>
            Gets column of the cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Comment">
      <summary>
            Gets or sets cell comment.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.ConvertExcelNumberToDateTime(System.Double,System.Boolean)">
      <summary>
            Converts Excel floating-point number to <see cref="T:System.DateTime" /> structure.
            </summary>
      <param name="num">Excel floating-point number.</param>
      <param name="use1904DateSystem">True to use 1904 date system.</param>
      <returns>Converted DateTime structure.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.DateTimeValue">
      <summary>
            Gets the DateTime value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The DateTime value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.DoubleValue">
      <summary>
            Gets the double value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The double value.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ExcelCell" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Formula">
      <summary>
            Gets or sets cell formula string.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.GetFormattedValue">
      <summary>
            Converts <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">cell value</see> of this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance to string representation using <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> 
            that is specified on this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <returns>Formatted <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">cell value.</see></returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.HasComment">
      <summary>
            If cell has comment returns true, else returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.HasHyperlink">
      <summary>
            If cell has hyperlink returns true, else returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Hyperlink">
      <summary>
            Gets or sets cell hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.IntValue">
      <summary>
            Gets the integer value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The integer value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.MergedRange">
      <summary>
            Returns associated merged range if the cell is merged; otherwise, <see langword="null" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.op_Equality(GemBox.Spreadsheet.ExcelCell,GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.op_Inequality(GemBox.Spreadsheet.ExcelCell,GemBox.Spreadsheet.ExcelCell)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelCell" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelCell" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Row">
      <summary>
            Gets row of the cell.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.Boolean)">
      <summary>
            Sets the boolean value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The boolean value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.DateTime)">
      <summary>
            Sets the DateTime value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The DateTime value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.Double)">
      <summary>
            Sets the double value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The double value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.Int32)">
      <summary>
            Sets the integer value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The integer value.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetValue(System.String)">
      <summary>
            Sets the string value to this cell or to merged range if this cell is merged.
            </summary>
      <param name="value">The string value.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.StringValue">
      <summary>
            Gets the string value of this cell or of merged range if this cell is merged.
            </summary>
      <returns>The string value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Value">
      <summary>
            Gets or sets value of this cell or of merged range if this cell is merged.
            </summary>
      <exception cref="T:System.NotSupportedException">Value is not supported.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.ValueType">
      <summary>
            Gets the cell value type.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Worksheet">
      <summary>
            Gets the parent worksheet.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCellCollection">
      <summary>
            Collection of excel cells (<see cref="T:GemBox.Spreadsheet.ExcelCell" />).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellCollection.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCellCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs">
      <summary>
            Arguments for <see cref="E:GemBox.Spreadsheet.ExtractToDataTableOptions.ExcelCellToDataTableCellConverting" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.Action">
      <summary>
            Gets or sets the action which will be executed after event, see <see cref="T:GemBox.Spreadsheet.ExtractDataEventAction" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableColumnIndex">
      <summary>
            Gets the destination column index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableColumnType">
      <summary>
            Gets the destination column type in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue">
      <summary>
            Gets or sets the value which will be inserted into destination <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /> cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell">
      <summary>
            Gets the source <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.IsDataTableValueValid">
      <summary>
            Gets a value indication whether current <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue" /> can be converted into <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /> cell.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumn">
      <summary>
            Excel column contains column options and cell range with column cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit(System.Double)">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
      <param name="scaling">Scaling factor.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit(System.Double,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Automatically fits column width by checking only the cells in the column that are specified by row range.
            </summary>
      <param name="scaling">Scaling factor.</param>
      <param name="firstRow">First row.</param>
      <param name="lastRow">Last row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFitAdvanced(System.Single)">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
      <param name="scaling">Scaling factor.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFitAdvanced(System.Single,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Automatically fits column width by checking only the cells in the column that are specified by row range.
            </summary>
      <param name="scaling">Scaling factor.</param>
      <param name="firstRow">First row.</param>
      <param name="lastRow">Last row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.Delete">
      <summary>
            Deletes this column from the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.GetWidth(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the width of column in arbitrary length unit.
            </summary>
      <param name="lengthUnit">The length unit in which to return column width.</param>
      <returns>The width of column in arbitrary length unit.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts specified number of copied columns before the current column.
            </summary>
      <param name="columnCount">Number of columns to insert.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.InsertEmpty(System.Int32)">
      <summary>
            Inserts specified number of empty columns before the current column.
            </summary>
      <param name="columnCount">Number of columns to insert.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.SetWidth(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the width of column in arbitrary length unit.
            </summary>
      <param name="value">Column width value.</param>
      <param name="lengthUnit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumn.Width">
      <summary>
            Gets or sets column width.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumnCollection">
      <summary>
            Collection of excel columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ColumnIndexToName(System.Int32)">
      <summary>
            Converts column index (0, 1, ...) to column name ("A", "B", ...).
            </summary>
      <param name="columnIndex">Column index.</param>
      <returns>Column name for the specified index.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ColumnNameToIndex(System.String)">
      <summary>
            Converts column name ("A", "B", ...) to column index (0, 1, ...).
            </summary>
      <param name="name">Column name.</param>
      <returns>Column index for the specified name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts copied column at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertCopy(System.Int32,System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts specified number of copied columns at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="columnCount">Number of columns to insert.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertEmpty(System.Int32)">
      <summary>
            Inserts empty column at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.InsertEmpty(System.Int32,System.Int32)">
      <summary>
            Inserts specified number of empty columns at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="columnCount">Number of columns to insert.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnCollection.Item(System.Int32)">
      <summary>
            Gets the column with the specified index.
            </summary>
      <param name="index">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.Remove(System.Int32)">
      <summary>
            Removes the column with the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes specified number of columns starting at the specified index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="columnCount">Number of columns to remove.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumnRowBase">
      <summary>
            Base class for the excel column and row classes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Cells">
      <summary>
            Gets cell range with column / row cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed">
      <summary>
            Gets or sets whether object is collapsed in outlining.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden">
      <summary>
            Gets or sets whether excel object is hidden.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index">
      <summary>
            Gets the row / column zero-based index which represents its position in a worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if style is default; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Name">
      <summary>
            Gets the name of <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.op_Equality(GemBox.Spreadsheet.ExcelColumnRowBase,GemBox.Spreadsheet.ExcelColumnRowBase)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.op_Inequality(GemBox.Spreadsheet.ExcelColumnRowBase,GemBox.Spreadsheet.ExcelColumnRowBase)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel">
      <summary>
            Gets or sets outline level.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 0 to 7 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">
      <summary>
            Gets or sets the cell formatting of cells in this column / row.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnRowBase.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelColumnRowBase" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelComment">
      <summary>
            Represents a comment object used by <see cref="P:GemBox.Spreadsheet.ExcelCell.Comment" /> in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Author">
      <summary>
            Gets or sets comment author.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.BottomRightCell">
      <summary>
            Gets or sets the bottom right anchor cell for the comment shape.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.ExcelComment" /> and is equal to this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Exists">
      <summary>
            If comment exists returns true, otherwise returns false.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.ExcelComment" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.IsVisible">
      <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.op_Equality(GemBox.Spreadsheet.ExcelComment,GemBox.Spreadsheet.ExcelComment)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelComment.op_Inequality(GemBox.Spreadsheet.ExcelComment,GemBox.Spreadsheet.ExcelComment)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.ExcelComment" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.ExcelComment" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Text">
      <summary>
            Gets the comment text assigned to excel cell
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.TopLeftCell">
      <summary>
            Gets or sets the top left anchor cell for the comment shape.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCommentCollection">
      <summary>
            Collection of comments (<see cref="T:GemBox.Spreadsheet.ExcelComment" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.Clear">
      <summary>
            Removes all comments. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCommentCollection.Count">
      <summary>
            Gets the number of comments contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCommentCollection.Item(System.Int32)">
      <summary>
            Gets the comment at the specified index.
            </summary>
      <param name="index">The zero-based index of the comment.</param>
      <returns>The comment at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the comment at the specified index.
            </summary>
      <param name="index">The zero-based index of the comment to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawing">
      <summary>
            Represents a base class for all drawings (pictures, charts, etc.) in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawing.Format">
      <summary>
            Formats this drawing (picture, chart, etc.) to its default size so it can be exported to PDF, XPS, image or be printed.
            </summary>
      <returns>Formatted drawing (picture, chart, etc.) which can be exported to PDF, XPS, image or be printed.</returns>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Drawing cannot be formatted because it doesn't belong to any worksheet.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawing.Format(System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Formats this drawing (picture, chart, etc.) to specified size so it can be exported to PDF, XPS, image or be printed.
            </summary>
      <param name="width">The formatted drawing width.</param>
      <param name="height">The formatted drawing height.</param>
      <param name="unit">The formatted drawing width / height length unit.</param>
      <returns>Formatted drawing (picture, chart, etc.) which can be exported to PDF, XPS, image or be printed.</returns>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Drawing cannot be formatted because it doesn't belong to any worksheet.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.HasHyperlink">
      <summary>
            Gets a value indicating whether this drawing (picture, chart, etc.) has hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.Hyperlink">
      <summary>
            Gets or sets the hyperlink on this drawing (picture, chart, etc.).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawing.Position">
      <summary>
            Gets the position of this drawing (picture, chart, etc.) in the worksheet.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawingCollection`1">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.ExcelDrawing">drawings</see> (pictures, charts, etc.) in the worksheet.
            </summary>
      <typeparam name="T">An <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> derived type.</typeparam>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.AddCopy(`0)">
      <summary>
            Adds a copy of the drawing (picture, chart, etc.) to the worksheet.
            </summary>
      <param name="item">The drawing (picture, chart, etc.) which will be copied to the worksheet.</param>
      <returns>A copy of the drawing (picture, chart, etc.) added to the worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Clear">
      <summary>
                    Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. 
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Contains(`0)">
      <summary>
                    Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
                </summary>
      <param name="item">
                    The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.Count">
      <summary>
                    Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <returns>
                    The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.GetEnumerator">
      <summary>
                    Returns an enumerator that iterates through the collection.
                </summary>
      <returns>
                    A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.IndexOf(`0)">
      <summary>
                    Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
                </summary>
      <param name="item">
                    The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.
                </param>
      <returns>
                    The index of <paramref name="item" /> if found in the list; otherwise, -1.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.Item(System.Int32)">
      <summary>
            Gets the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.Remove(`0)">
      <summary>
                    Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <param name="item">
                    The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
                </returns>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.RemoveAt(System.Int32)">
      <summary>
                    Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
                </summary>
      <param name="index">
                    The zero-based index of the item to remove.
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>
                    Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <param name="item">
                    The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </param>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>
                    Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
                </summary>
      <param name="array">
                    The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.
                </param>
      <param name="arrayIndex">
                    The zero-based index in <paramref name="array" /> at which copying begins.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.
                
                    -or-
                <paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.
                
                    -or-
                
                    The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.
                
                    -or-
                
                    Type <paramref name="T" /> cannot be cast automatically to the type of the destination <paramref name="array" />.
                </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>
                    Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
                </summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>
                    Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
                </summary>
      <param name="index">
                    The zero-based index at which <paramref name="item" /> should be inserted.
                </param>
      <param name="item">
                    The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.
                </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>
                    Gets or sets the element at the specified index.
                </summary>
      <param name="index">
                    The zero-based index of the element to get or set.
                </param>
      <returns>
                    The element at the specified index.
                </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    Returns an enumerator that iterates through a collection.
                </summary>
      <returns>
                    An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
                </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelDrawingPosition">
      <summary>
            Represents a class which holds information about position and size of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.From">
      <summary>
            Gets or sets the anchor cell which the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) spans from.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetHeight(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the height of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The height of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetLeft(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the distance of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The distance of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetTop(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the distance of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The distance of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetWidth(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the width of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="unit">The length unit of the returned value.</param>
      <returns>The width of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Height">
      <summary>
            Gets or sets the height (in points) of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Left">
      <summary>
            Gets or sets the distance (in points) of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode">
      <summary>
            Gets or sets the positioning mode of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetHeight(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the height of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetLeft(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the distance of the left edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the left edge of the worksheet.
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetTop(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the distance of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.SetWidth(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the width of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
      <param name="value">The value.</param>
      <param name="unit">The length unit of the <paramref name="value" /> parameter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.To">
      <summary>
            Gets or sets the anchor cell which the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) spans to.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Top">
      <summary>
            Gets or sets the distance (in points) of the top edge of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) from the top edge of the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelDrawingPosition.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelDrawingPosition" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelDrawingPosition" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelDrawingPosition.Width">
      <summary>
            Gets or sets the width (in points) of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFile">
      <summary>
            Excel file contains one or more worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />)
            and workbook related properties and methods.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.#ctor">
      <summary>
            Initializes an empty (no worksheets) instance of the ExcelFile class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.AutoDetectCsvSeparator(System.IO.Stream)">
      <summary>
            Autodetects CSV separator. If there's no separators in the input stream returns (char)0. 
            </summary>
      <param name="stream">Input Stream.</param>
      <returns>Char that is CSV separator. If there's no separators in the input StreamReader returns (char)0, 
            and if there are two with equal number of occurance, returns first of them.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.AutoDetectCsvSeparator(System.IO.StreamReader,System.Int32,System.Char[])">
      <summary>
            Autodetects CSV separator. If there's no separators in the input stream returns (char)0. 
            </summary>
      <param name="sr">Input StreamReader.</param>
      <param name="rowsToTest">Number of rows to test.</param>
      <param name="possibleSeparators">Chars that can be CSV separators.</param>
      <returns>Char that is CSV separator. If there's no separators in the input StreamReader returns (char)0, 
            and if there are two with equal number of occurance, returns first of them.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ClosePreservedXlsx">
      <summary>
            Closes preserved XLSX file handle if needed 
            (<see cref="F:GemBox.Spreadsheet.XlsxOptions.PreserveKeepOpen">XlsxOptions.PreserveKeepOpen</see> was
            used with <see cref="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.String,GemBox.Spreadsheet.XlsxOptions)">
            ExcelFile.LoadXlsx(string,XlsxOptions)</see> method). <b>(.NET 3.0 and greater only)</b></summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ConvertToImageSource(GemBox.Spreadsheet.ImageSaveOptions)">
      <summary>
            Converts single page specified in <paramref name="options" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance to an <see cref="T:System.Windows.Media.ImageSource" /> instance.
            </summary>
      <param name="options">The options used when converting a single spreadsheet's page to an image.</param>
      <returns>A new <see cref="T:System.Windows.Media.ImageSource" /> instance created from a single spreadsheet's page specified in <paramref name="options" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ConvertToXpsDocument(GemBox.Spreadsheet.XpsSaveOptions)">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance.
            </summary>
      <param name="options">The options used when converting to XML Paper Specification (XPS) document.</param>
      <returns>A New <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance created from this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvAllowNewlineInQuotes">
      <summary>
            Gets or sets whether SaveCsv() methods will allow newline in quotes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvAlwaysQuoteValues">
      <summary>
            Gets or sets whether SaveCsv() methods will always put values in quotes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvParseNumbersDuringLoad">
      <summary>
            Gets or sets whether LoadCsv() methods will try to convert text values to numbers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefaultFontName">
      <summary>
            Gets or sets name of the default font used in the workbook.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefaultFontSize">
      <summary>
            Gets or sets default font size.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefinedNames">
      <summary>
            Gets the collection of defined names that are not directly related with one cell range.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DelayFormulaParse">
      <summary>
            Delays formula parsing until one of SaveXls methods is called.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DocumentProperties">
      <summary>
            Gets <see cref="P:GemBox.Spreadsheet.ExcelFile.DocumentProperties" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.GroupMethodsAffectedCellsLimit">
      <summary>
            Maximum number of affected cells in group set methods.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.IoWarning">
      <summary>
            Fired for unexpected situations when reading or writing XLS / CSV files.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.LimitNear">
      <summary>
            Occurs when the size of XLS / CSV file in reading / writing is near <b>GemBox.Spreadsheet</b> free limit.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.LimitReached">
      <summary>
            Occurs when the size of XLS / CSV file in reading / writing is above <b>GemBox.Spreadsheet</b> free limit.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.Stream,GemBox.Spreadsheet.LoadOptions)">
      <summary>
            Loads a spreadsheet from the specified stream.
            </summary>
      <param name="stream">The stream from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.TextReader,GemBox.Spreadsheet.CsvLoadOptions)">
      <summary>
            Loads a spreadsheet from CSV data using the specified reader.
            </summary>
      <param name="reader">The reader which is used to load a spreadsheet.</param>
      <param name="options">The CSV loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.String)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.String,GemBox.Spreadsheet.LoadOptions)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.Stream,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads the existing stream with specified CSV format.
            </summary>
      <param name="stream">Input stream.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.Stream,System.Char)">
      <summary>
            Loads the existing stream, using specified character as a delimiter.
            </summary>
      <param name="stream">Input stream.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.StreamReader,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads all data using specified StreamReader and CSV Type.
            </summary>
      <param name="reader">Stream reader.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.StreamReader,System.Char)">
      <summary>
            Loads all data using specified StreamReader and character delimiter.
            </summary>
      <param name="reader">Stream reader.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads the existing file with specified CSV format.
            </summary>
      <param name="path">Existing CSV file name (opened for reading).</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,System.Char)">
      <summary>
            Loads the existing file, using specified character as a delimiter.
            </summary>
      <param name="path">File name.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadFromDirectory(System.String,GemBox.Spreadsheet.OdsLoadOptions)">
      <summary>
            Loads all parts of ODS file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The ODS loading options which can be used to define settings for load operation.</param>
      <returns>A loaded ODS spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadFromDirectory(System.String,GemBox.Spreadsheet.XlsxLoadOptions)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The XLSX loading options which can be used to define settings for load operation.</param>
      <returns>A loaded XLSX spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOds(System.IO.Stream,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads the existing ODS file from the input stream.
            </summary>
      <param name="stream">Input stream (opened for reading).</param>
      <param name="odsOptions">ODS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOds(System.String,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads the existing ODS file.
            </summary>
      <param name="path">Existing ODS file name.</param>
      <param name="odsOptions">ODS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOdsFromDirectory(System.String,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads all parts of ODS file as separate files from input directory.
            </summary>
      <param name="path">Path of input directory.</param>
      <param name="odsOptions">ODS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.IO.Stream)">
      <summary>
            Loads the existing XLS file from the input stream (preserving MS Excel records).
            </summary>
      <param name="stream">Input stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.IO.Stream,GemBox.Spreadsheet.XlsOptions)">
      <summary>
            Loads the existing XLS file from the input stream (optionally preserving MS Excel records).
            </summary>
      <param name="stream">Input stream.</param>
      <param name="xlsOptions">XLS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.String)">
      <summary>
            Loads the existing XLS file (preserving MS Excel records).
            </summary>
      <param name="path">Existing XLS file name (opened for reading).</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.String,GemBox.Spreadsheet.XlsOptions)">
      <summary>
            Loads the existing XLS file (optionally preserving MS Excel records).
            </summary>
      <param name="path">Existing XLS file name (opened for reading).</param>
      <param name="xlsOptions">XLS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.IO.Stream,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads the existing XLSX file from the input stream. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="stream">Input stream.</param>
      <param name="xlsxOptions">XLSX options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.String,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads the existing XLSX file. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="path">Existing XLSX file name (opened for reading).</param>
      <param name="xlsxOptions">XLSX options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsxFromDirectory(System.String,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">Path of input directory.</param>
      <param name="xlsxOptions">XLS options.</param>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxColumns">
      <summary>
            Maximum number of columns in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxRows">
      <summary>
            Maximum number of rows in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsCellStyles">
      <summary>
            Maximum number of user-defined cell styles in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColors">
      <summary>
            Maximum number of colors in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColumns">
      <summary>
            Maximum number of columns in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsRows">
      <summary>
            Maximum number of rows in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print">
      <summary>
            Prints the document to the default printer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print(System.String)">
      <summary>
            Prints the document to the specified printer.
            </summary>
      <param name="printerName">Printer name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print(System.String,GemBox.Spreadsheet.PrintOptions)">
      <summary>
            Prints the document to the specified printer according to specified options.
            </summary>
      <param name="printerName">Printer name.</param>
      <param name="options">Print options.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Protected">
      <summary>
            Gets or sets the workbook protection flag.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.RowColumnResolutionMethod">
      <summary>
            Gets or sets the <see cref="T:GemBox.Spreadsheet.CellStyle" /> resolution method.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to the specified stream.
            </summary>
      <param name="stream">The stream to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.IO.TextWriter,GemBox.Spreadsheet.CsvSaveOptions)">
      <summary>
            Save the spreadsheet to CSV format using the specified writer.
            </summary>
      <param name="writer">The writer which is used to save the spreadsheet.</param>
      <param name="options">The CSV saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String)">
      <summary>
            Saves the spreadsheet to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the spreadsheet to a client browser. File format is resolved from <paramref name="fileName" /> extension. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <exception cref="T:System.InvalidOperationException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the spreadsheet to a client browser. File format is defined with <paramref name="options" /> parameter. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the spreadsheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Xml.XmlWriter,GemBox.Spreadsheet.HtmlSaveOptions)">
      <summary>
            Save the spreadsheet to HTML format using the specified writer.
            </summary>
      <param name="writer">The writer which is used to save the spreadsheet.</param>
      <param name="options">The HTML saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.Stream,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data to a stream in a specified CSV format.
            </summary>
      <param name="stream">Output stream.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.Stream,System.Char)">
      <summary>
            Saves all data to a stream, using specified character as a delimiter.
            </summary>
      <param name="stream">Output stream.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.TextWriter,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data using specified TextWriter and CSV Type.
            </summary>
      <param name="writer">Text writer.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.TextWriter,System.Char)">
      <summary>
            Saves all data using specified TextWriter and character delimiter.
            </summary>
      <param name="writer">Text writer.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data to a new file in a specified CSV format.
            </summary>
      <param name="path">File name.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,System.Char)">
      <summary>
            Saves all data to a new file, using specified character as a delimiter.
            </summary>
      <param name="path">File name.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOds(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in ODF format.
            </summary>
      <param name="stream">Output stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOds(System.String)">
      <summary>
            Saves all data to a new file in ODF format.
            </summary>
      <param name="path">File name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOdsToDirectory(System.String)">
      <summary>
            Saves all parts of ODS file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToDirectory(System.String,GemBox.Spreadsheet.OdsSaveOptions)">
      <summary>
            Saves all parts of ODS file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToDirectory(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToHttpResponse(System.Object,System.String,System.Object[])">
      <summary>
            Saves the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to a System.Web.HttpResponse output stream and sets appropriate HTTP response headers. Use this method in ASP.NET application to send the document to a client browser. File format is resolved from <paramref name="options" /> parameter or <paramref name="fileName" /> parameter file extension as described in remarks. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in XLS format.
            </summary>
      <param name="stream">Output stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.String)">
      <summary>
            Saves all data to a new file in XLS format.
            </summary>
      <param name="path">File name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="stream">Output stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.IO.Stream,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all data to an output stream in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="stream">Output stream.</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.String)">
      <summary>
            Saves all data to a new file in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="path">File name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all data to a new file in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="path">File name.</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsxToDirectory(System.String)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsxToDirectory(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Styles">
      <summary>
            Gets the collection of workbook (master) <see cref="T:GemBox.Spreadsheet.Style" />s defined for this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)">
      <summary>
            Gets a value indicating whether the objects of specified type can be assigned 
            to <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">ExcelCell.Value</see> property.
            </summary>
      <param name="type">Queried type.</param>
      <returns>
        <see langword="true" /> if the specified type is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Use1904DateSystem">
      <summary>
            Gets or sets whether 1904 date system is used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Worksheets">
      <summary>
            Collection of all worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />) in a workbook. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFillPattern">
      <summary>
            Represents cell fill (background) formatting which can be either pattern or gradient.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor1">
      <summary>
        <para>Gets or sets the first color of the gradient fill effect.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
        <para>Gradient fill is currently supported in XLSX and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.GradientColor2">
      <summary>
        <para>Gets or sets the second color of the gradient fill effect.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
        <para>Gradient fill is currently supported in XLSX and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.GradientStyle">
      <summary>
        <para>Gets or sets the shading style of the gradient fill effect, if there is any gradient fill effect applied.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.GradientShadingStyle.None" />.</para>
        <para>Gradient fill is currently supported in XLSX and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
      <exception cref="T:System.ArgumentException">Value cannot be set to <see cref="F:GemBox.Spreadsheet.GradientShadingStyle.Complex" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor">
      <summary>
        <para>Gets or sets the pattern fill background color.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor">
      <summary>
        <para>Gets or sets the pattern fill foreground color.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Empty" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle">
      <summary>
        <para>Gets or sets the pattern fill style.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" />.</para>
        <para>Currently supported only in XLS and XLSX. For all other formats it defaults to either <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" /> or <see cref="F:GemBox.Spreadsheet.FillPatternStyle.Solid" />.</para>
        <para>If set value is not <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" />, then <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> and/or <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" /> should also be set.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetGradient(GemBox.Spreadsheet.GradientShadingStyle,GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Sets the gradient fill effect.
            </summary>
      <param name="gradientStyle">The shading style of the gradient fill effect.</param>
      <param name="gradientColor1">The first color of the gradient fill effect.</param>
      <param name="gradientColor2">The second color of the gradient fill effect.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetPattern(GemBox.Spreadsheet.FillPatternStyle,GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Sets the pattern fill.
            </summary>
      <param name="patternStyle">The pattern style.</param>
      <param name="foregroundColor">Foreground color of the pattern fill.</param>
      <param name="backgroundColor">Background color of the pattern fill.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetSolid(GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
        <para>Sets the solid pattern fill with the specified fill color.</para>
        <para>Sets <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle" /> to <see cref="F:GemBox.Spreadsheet.FillPatternStyle.Solid" /> and <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> to <paramref name="fillColor" />.</para>
      </summary>
      <param name="fillColor">Foreground color of the solid pattern fill.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFillPattern" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFillPattern" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFont">
      <summary>
            Represents a typeface (for example, <b>Calibri</b>), along with its attributes (size, font style, underlining, color, and effects).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFont.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ExcelFont" /> class.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.BoldWeight">
      <summary>
            Default bold font weight.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Color">
      <summary>
        <para>Gets or sets the color of the text.</para>
        <para>Default value is color created from name <see cref="F:GemBox.Spreadsheet.ColorName.Text1" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Italic">
      <summary>
        <para>Gets or sets a value indicating whether to display characters in italic font style.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.MaxWeight">
      <summary>
            Maximum font weight.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.MinWeight">
      <summary>
            Minimum font weight.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Name">
      <summary>
        <para>Gets or sets the face name of this font.</para>
        <para>Default value is <b>Calibri</b>.</para>
      </summary>
      <exception cref="T:System.ArgumentException">Value cannot be null or empty.</exception>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.NormalWeight">
      <summary>
            Normal font weight.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition">
      <summary>
        <para>Gets or sets the vertical position of the text relative to the text's default appearance.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.ScriptPosition.Normal" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Size">
      <summary>
        <para>Gets or sets the size of the text in twips (1/20th of a point).</para>
        <para>Default value is 11 * 20 = 220.</para>
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be positive.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Strikeout">
      <summary>
        <para>Gets or sets a value indicating whether to draw a strike-through line through the horizontal middle of the text.</para>
        <para>Default value is <see langword="false" />.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFont.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFont" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelFont" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle">
      <summary>
        <para>Gets or sets the underline formatting of the text.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.UnderlineStyle.None" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Weight">
      <summary>
        <para>Gets or sets the font weight (font boldness).</para>
        <para>Value must be between <see cref="F:GemBox.Spreadsheet.ExcelFont.MinWeight" /> and <see cref="F:GemBox.Spreadsheet.ExcelFont.MaxWeight" />.</para>
        <para>For standard boldness, use <see cref="F:GemBox.Spreadsheet.ExcelFont.BoldWeight" />.</para>
        <para>Default value is <see cref="F:GemBox.Spreadsheet.ExcelFont.NormalWeight" />.</para>
      </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value must be between <see cref="F:GemBox.Spreadsheet.ExcelFont.MinWeight" /> and <see cref="F:GemBox.Spreadsheet.ExcelFont.MaxWeight" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPicture">
      <summary>
            Represents a picture in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.BottomRightCell">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.To" /> property instead.</para>
        <para>Gets or sets the bottom right anchor cell for the picture.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.BoundingRectangle">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetLeft(GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetTop(GemBox.Spreadsheet.LengthUnit)" />, <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetWidth(GemBox.Spreadsheet.LengthUnit)" /> and <see cref="M:GemBox.Spreadsheet.ExcelDrawingPosition.GetHeight(GemBox.Spreadsheet.LengthUnit)" /> methods instead.</para>
        <para>Gets the image bounding rectangle.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.Delete">
      <summary>
            Removes this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance from the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Image">
      <summary>
        <para>This property is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPicture.ToImage" /> method instead.</para>
        <para>Gets the picture as <see cref="T:System.Drawing.Image" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.ImageStream">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelPicture.PictureStream" /> property instead.</para>
        <para>Gets the image stream.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.PictureFormat">
      <summary>
            Gets the picture format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.PictureStream">
      <summary>
            Gets the picture stream.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Positioning">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> property instead.</para>
        <para>Gets or sets the positioning options of the picture.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.ToImage">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance to a new <see cref="T:System.Drawing.Image" /> instance.
            </summary>
      <returns>A new <see cref="T:System.Drawing.Image" /> instance created from this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.TopLeftCell">
      <summary>
        <para>This property is obsolete. Use <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> property and its <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.From" /> property instead.</para>
        <para>Gets or sets the top left anchor cell for the picture.</para>
      </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPictureCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.ExcelPicture">picture</see>s in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFrom">The picture's position (top-left corner).</param>
      <param name="positionTo">The picture's end position (bottom-right corner).</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFrom">The picture's position.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.String,System.String)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="pictureStream">The picture's stream.</param>
      <param name="pictureFormat">The picture's format.</param>
      <param name="positionFromCell">The picture's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The picture's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image with defined anchor properties.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="positionTo">Bottom right anchor cell.</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead. Parameters <i>width</i> and <i>height</i> can, for example, be retrieved by using <see href="http://msdn.microsoft.com/en-us/library/93z9ee4x.aspx">Image.FromStream(Stream)</see> method and <see href="http://msdn.microsoft.com/en-us/library/system.drawing.image.size.aspx">Image.Size</see> property. Note that <see cref="T:System.Drawing.Image" /> instance must be disposed.</para>
        <para>Adds the image by using defined top left anchor property and default width/height.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,System.Int32,System.Int32,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined top left anchor property and defined width and height.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="width">Image width (in pixels).</param>
      <param name="height">Image height (in pixels).</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,System.Drawing.Rectangle,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image by using defined rectangle.</para>
      </summary>
      <param name="pictureStream">Stream of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="rectangle">The destination rectangle.</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,System.Drawing.Rectangle,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method instead.</para>
        <para>Adds image from the image object by using defined rectangle.</para>
      </summary>
      <param name="pictureStream">Image stream.</param>
      <param name="rectangle">Destination rectangle.</param>
      <param name="pictureFormat">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells. Picture size will be determined by using GDI+.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position (top-left corner).</param>
      <param name="positionTo">The picture's end position (bottom-right corner).</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFrom">The picture's position.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined top left anchor property and default width/height.</para>
      </summary>
      <param name="picturePath">File name of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName with defined anchor properties.</para>
      </summary>
      <param name="picturePath">File name of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="positionTo">Bottom right anchor cell.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,System.Int32,System.Int32)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined top left anchor property and defined width and height.</para>
      </summary>
      <param name="picturePath">File name of the image to be added.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="positionFrom">Top left anchor cell.</param>
      <param name="width">Image width (in pixels).</param>
      <param name="height">Image height (in pixels).</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,System.Drawing.Rectangle)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method and <see cref="P:GemBox.Spreadsheet.ExcelDrawing.Position" /> and <see cref="P:GemBox.Spreadsheet.ExcelDrawingPosition.Mode" /> properties instead.</para>
        <para>Adds the image from specified fileName by using defined rectangle.</para>
      </summary>
      <param name="picturePath">The fileName.</param>
      <param name="positioningMode">Positioning mode of the image.</param>
      <param name="rectangle">The destination rectangle.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells. Picture size will be determined by using GDI+.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="left">The distance of the left edge of the picture from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the picture from the top edge of the worksheet.</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Drawing.Rectangle)">
      <summary>
        <para>This method is obsolete. Use <see cref="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)" /> method instead.</para>
        <para>Adds the image from specified fileName by using defined rectangle.</para>
      </summary>
      <param name="picturePath">The fileName.</param>
      <param name="rectangle">The destination rectangle.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells. Picture size will be determined by using GDI+.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new picture to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (for example, "A1").</param>
      <param name="width">The picture's width.</param>
      <param name="height">The picture's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new picture added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds a new picture to the worksheet which moves and sizes with cells.
            </summary>
      <param name="picturePath">The picture's path.</param>
      <param name="positionFromCell">The picture's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The picture's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new picture added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPictureFormat">
      <summary>
            Picture formats.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Jpeg">
      <summary>
            Jpeg picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Png">
      <summary>
            Png picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Tiff">
      <summary>
            Tiff picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Gif">
      <summary>
            Gif picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Emf">
      <summary>
            Emf picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Wmf">
      <summary>
            Wmf picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Bmp">
      <summary>
            Bmp picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Exif">
      <summary>
            Exif picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Ico">
      <summary>
            Ico picture format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPrintOptions">
      <summary>
            Stores MS Excel print and print related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.AutomaticPageBreakScalingFactor">
      <summary>
            Scaling factor for automatic page breaks.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.BottomMargin">
      <summary>
            Bottom margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.DraftQuality">
      <summary>
        <see langword="true" /> for printing in draft quality, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" />.
            </summary>
      <param name="obj">Object of <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> type.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitToPage">
      <summary>
        <see langword="true" /> for using 
            <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages" />
            and <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages" />, 
            <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages">
      <summary>
            Fit worksheet height to this number of pages (0 = use as many as needed).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages">
      <summary>
            Fit worksheet width to this number of pages (0 = use as many as needed).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FooterMargin">
      <summary>
            Footer margin (in inches).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.GetHashCode">
      <summary>
            Returns the hash code of this object.
            </summary>
      <returns>Hash code.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.HeaderMargin">
      <summary>
            Header margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.HorizontalCentered">
      <summary>
        <see langword="true" /> for printing sheet horizontal centered, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.LeftMargin">
      <summary>
            Left margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.NumberOfCopies">
      <summary>
            Number of copies to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PageHeight">
      <summary>
            Gets the height of the page (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PageWidth">
      <summary>
            Gets the width of the page (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperSize">
      <summary>
            MS Excel specific paper size / type index.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType">
      <summary>
            Gets or sets the type of the paper for the page. 
            </summary>
      <exception cref="T:System.ArgumentException">Thrown if type is set to
            <see cref="F:GemBox.Spreadsheet.PaperType.Custom">PaperType.Custom</see></exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.Portrait">
      <summary>
        <see langword="true" /> for portrait orientation, <see langword="false" /> for landscape orientation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintBlackWhite">
      <summary>
        <see langword="true" /> for printing in black and white, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintCellNotes">
      <summary>
        <see langword="true" /> for printing cell notes, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintGridlines">
      <summary>
        <see langword="true" /> for printing gridlines, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintHeadings">
      <summary>
        <see langword="true" /> for print headings, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintNotesSheetEnd">
      <summary>
        <see langword="true" /> for printing notes at end of sheet, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintPagesInRows">
      <summary>
        <see langword="true" /> for printing pages in rows, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintResolution">
      <summary>
            Print resolution in DPI (dots per inch).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.RightMargin">
      <summary>
            Right margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.StartPageNumber">
      <summary>
            Start page number.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.TopMargin">
      <summary>
            Top margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.UseStartPageNumber">
      <summary>
        <see langword="true" /> for using start page number, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.VerticalCentered">
      <summary>
        <see langword="true" /> for printing sheet vertical centered, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.VerticalPrintResolution">
      <summary>
            Vertical print resolution in DPI (dots per inch).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRow">
      <summary>
            Excel row contains row options and cell range with row cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">
      <summary>
            Gets only currently allocated cells for this row.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.AutoFit">
      <summary>
            Automatically fits row height to the minimum size required for all lines in the row cells to be visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.Delete">
      <summary>
            Deletes this row from the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.GetHeight(GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Gets the height of row in arbitrary length unit.
            </summary>
      <param name="lengthUnit">The length unit in which to return row height.</param>
      <returns>The height of row in arbitrary length unit.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.Height">
      <summary>
            Gets or sets row height.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts specified number of copied rows before the current row.
            </summary>
      <param name="rowCount">Number of rows to insert.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.InsertEmpty(System.Int32)">
      <summary>
            Inserts specified number of empty rows before the current row.
            </summary>
      <param name="rowCount">Number of rows to insert.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.SetHeight(System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Sets the height of row in arbitrary length unit.
            </summary>
      <param name="value">Row height value.</param>
      <param name="lengthUnit">The length unit in which <paramref name="value" /> is specified.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowCollection">
      <summary>
            Collection of excel rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts copied row at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertCopy(System.Int32,System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts specified number of copied rows at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="rowCount">Number of rows to insert.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertEmpty(System.Int32)">
      <summary>
            Inserts empty row at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.InsertEmpty(System.Int32,System.Int32)">
      <summary>
            Inserts specified number of empty rows at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="rowCount">Number of rows to insert.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowCollection.Item(System.Int32)">
      <summary>
            Gets the row with the specified index.
            </summary>
      <param name="index">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.Remove(System.Int32)">
      <summary>
            Removes the row with the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes specified number of rows starting at the specified index.
            </summary>
      <param name="rowIndex">The zero-based index of the row.</param>
      <param name="rowCount">Number of rows to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.RowIndexToName(System.Int32)">
      <summary>
            Converts row index (0, 1, ...) to row name ("1", "2", ...).
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>Row name for the specified index.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.RowNameToIndex(System.String)">
      <summary>
            Converts row name ("1", "2", ...) to row index (0, 1, ...).
            </summary>
      <param name="name">Row name.</param>
      <returns>Row index for the specified name.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase">
      <summary>
            Base class for row, column and cell collections.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase" />.
            </summary>
      <returns>
            An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCollectionBase">
      <summary>
            Base class for row and column collections.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1">
      <summary>
            Generic base class for row and column collections.
            </summary>
      <typeparam name="T">Type of the items in the collection, either <see cref="T:GemBox.Spreadsheet.ExcelRow" /> or <see cref="T:GemBox.Spreadsheet.ExcelColumn" />.</typeparam>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Item(System.Int32)">
      <summary>
            Gets the row / column with the specified index.
            </summary>
      <param name="index">The zero-based index of the row / column.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Item(System.String)">
      <summary>
            Gets the row / column with the specified name.
            </summary>
      <param name="name">The name of the row / column.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelViewOptions">
      <summary>
            Stores MS Excel display and view related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.FirstVisibleColumn">
      <summary>
            Index of the first visible column in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.FirstVisibleRow">
      <summary>
            Index of the first visible row in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineColumnButtonsRight">
      <summary>
            Gets or sets whether outline column buttons are displayed on the right side of groups.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineRowButtonsBelow">
      <summary>
            Gets or sets whether outline row buttons are displayed below groups.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.PageBreakViewZoom">
      <summary>
            Magnification factor in page break view.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.SelectedCells">
      <summary>
            Gets or sets the selected cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowColumnsFromRightToLeft">
      <summary>
            If true, MS Excel shows columns from right to left.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowFormulas">
      <summary>
            If true, MS Excel shows formulas. Otherwise, formula results are shown. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowGridLines">
      <summary>
            If true, MS Excel shows grid lines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowInPageBreakPreview">
      <summary>
            If true, MS Excel shows worksheet in page break preview. Otherwise, normal view is used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowOutlineSymbols">
      <summary>
            If true, MS Excel shows outline symbols.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowSheetHeaders">
      <summary>
            If true, MS Excel shows row and column headers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowZeroValues">
      <summary>
            If true, MS Excel shows zero values. Otherwise, zero values are shown as empty cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ViewType">
      <summary>
            Gets and sets the view type. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.Zoom">
      <summary>
            Magnification factor in normal view.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheet">
      <summary>
            Excel worksheet is a table with additional properties, identified by a unique name.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns">
      <summary>
            Iterates all rows and finds maximum number of used columns.
            </summary>
      <returns>Maximum number of occupied columns in this sheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">
      <summary>
            Gets all the cells in the sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Charts">
      <summary>
            Gets the worksheet charts. Not supported in XLS.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Clear">
      <summary>
            Clears this worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Columns">
      <summary>
            Gets collection of all columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Comments">
      <summary>
            Gets comments in this sheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean)">
      <summary>
            Extracts data from <see cref="T:GemBox.Spreadsheet.CellRange">specified range of cells</see> to a new <see cref="T:System.Data.DataTable" />. 
            </summary>
      <param name="range">Cell range.</param>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <returns>DataTable with data from specified cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution)">
      <summary>
            Extracts data from used cells of this worksheet to a new <see cref="T:System.Data.DataTable" />. 
            <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see> is determined by the <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <returns>DataTable with data from used cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,GemBox.Spreadsheet.ExcelColumn[])">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean,GemBox.Spreadsheet.ExcelColumn[])">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean,System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.ExcelColumn})">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.ExcelColumn})">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />. 
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CreateDataTableOptions)">
      <summary>
            Creates a <see cref="T:System.Data.DataTable" /> and fills it with data from this <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> in a manner specified by
            create options, see <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" />.
            </summary>
      <param name="options">Options that describe how <see cref="T:System.Data.DataTable" /> will be created and filled with data extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> with data from specified cells.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DataValidations">
      <summary>
            Gets the collection that expresses all data validation information for cells in a sheet which have data validation features applied.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DefaultColumnWidth">
      <summary>
            Gets or sets the default column width in 1/256th of the width of the zero character in default font.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DefaultRowHeight">
      <summary>
            Gets or sets the default row height in twips (1/20th of a point). Not supported in XLS and ODS.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Delete">
      <summary>
            Deletes this worksheet from the workbook.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent">
      <summary>
            Event that fires when specific error occurs while extracting data to DataTable.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,GemBox.Spreadsheet.ExtractToDataTableOptions)">
      <summary>
            Extracts data to <see cref="T:System.Data.DataTable" /> with specified extract options, see <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" />.
            </summary>
      <param name="dataTable">Destination <see cref="T:System.Data.DataTable" />.</param>
      <param name="options">Options that describe how data will be extracted, see <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Extracts data to DataTable with the same column order as it is in ExcelWorksheet.
            </summary>
      <param name="dataTable">Destination DataTable.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="startColumn">Start ExcelColumn.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Data.Common.DataColumnMappingCollection,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Extracts data to DataTable with column mapping.
            </summary>
      <param name="dataTable">Destination DataTable.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="dataColumnMappingCollection">Column mapping.</param>
      <param name="startRow">Start ExcelRow.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractUsedRangeToDataTable(GemBox.Spreadsheet.ExtractDataOptions)">
      <summary>
            Extracts data from used cells of this worksheet to a new DataTable with columns of type object.
            </summary>
      <param name="options">Options that describe how data will be extracted.</param>
      <returns>New DataTable.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange">
      <summary>
            Calculates cell range that is used in the worksheet (every allocated cell is considered used).
            </summary>
      <returns>Cell range that is used in the worksheet (every allocated cell is considered used).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange(System.Boolean)">
      <summary>
            Calculates cell range that is used in the worksheet.
            </summary>
      <param name="ignoreCellsWithoutValue">Specifies if allocated cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> set to <see langword="null" /> are ignored.</param>
      <returns>Cell range that is used in the worksheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HasHeadersFooters">
      <summary>
            Returns true if worksheet has headers/footers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HasSplitOrFreezePanes">
      <summary>
            Returns true if worksheet has split or freeze panes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HeadersFooters">
      <summary>
            Gets or sets headers/footers for the sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HorizontalPageBreaks">
      <summary>
            Gets collection of all horizontal page breaks 
            (<see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Hyperlinks">
      <summary>
            Gets hyperlinks in this sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Index">
      <summary>
            Gets worksheet zero-based index.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertCopy(System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Inserts a copy of an existing worksheet before the current worksheet.
            </summary>
      <param name="destinationWorksheetName">Name of the new worksheet.</param>
      <param name="sourceWorksheet">Source worksheet.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> into the current worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> which will be inserted into the current worksheet.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,GemBox.Spreadsheet.InsertDataTableOptions)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> into the current worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> which will be inserted into the current worksheet.</param>
      <param name="options">The <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> which can be used to define settings for the insert operation.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> at the specified row and column in 
            the current worksheet.
            </summary>
      <param name="dataTable">Source DataTable.</param>
      <param name="startRow">Index of the start row.</param>
      <param name="startColumn">Index of the start column.</param>
      <param name="columnHeaders">True to insert column names above data.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,System.String,System.Boolean)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> at the specified position in 
            the current worksheet.
            </summary>
      <param name="dataTable">Source DataTable.</param>
      <param name="startCell">Name of start (top-left) cell.</param>
      <param name="columnHeaders">True to insert column names above data.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertEmpty(System.String)">
      <summary>
            Inserts an empty worksheet before the current worksheet.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Name">
      <summary>
            Gets or sets worksheet name. 
            </summary>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.NamedRanges">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.NamedRangeCollection" /> 
            containing descriptive names which are used to represent cells, ranges of cells, 
            formulas, or constant values.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Panes">
      <summary>
            Gets or sets the panes in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Parent">
      <summary>
            Gets the parent <see cref="T:GemBox.Spreadsheet.ExcelFile" /> of this <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> instance.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PasswordHash">
      <summary>
            Gets or sets the password hash for protected sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures">
      <summary>
            Gets the worksheet pictures.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions">
      <summary>
            Contains MS Excel print and print related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Protected">
      <summary>
            Gets or sets the worksheet protection flag.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ProtectionSettings">
      <summary>
            Gets or sets worksheet protection properties. This settings will be used only if <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" /> is set to <see langword="true" />;
            Otherwise it will be ignored.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ResolveCellStyle(System.Int32,System.Int32)">
      <summary>
        <para>Resolves the cell style.</para>
        <para>Use <see cref="P:GemBox.Spreadsheet.AbstractRange.Style" /> property instead.</para>
      </summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <returns>The resolved cell style.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Rows">
      <summary>
            Gets collection of all rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.TabColor">
      <summary>
        <para>Gets or sets the worksheet tab color.</para>
        <para>Supported only in XLSX and HTML.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.VerticalPageBreaks">
      <summary>
            Gets collection of all vertical page breaks 
            (<see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ViewOptions">
      <summary>
            Contains MS Excel display and view related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Visibility">
      <summary>
            Gets or sets the worksheet visible property.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEventHandler">
      <summary>
            Delegate for handling the ExtractData events.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
      <summary>
            Collection of worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet">
      <summary>
            Gets or sets active worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(System.String)">
      <summary>
            Adds an empty worksheet to the end of the collection.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.AddCopy(System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Adds a copy of an existing worksheet to the end of the collection.
            </summary>
      <param name="destinationWorksheetName">Name of new worksheet.</param>
      <param name="sourceWorksheet">Source worksheet.</param>
      <returns>Newly created worksheet.</returns>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Contains(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> element is in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to locate in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</param>
      <returns>
            True if <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> is found in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />; otherwise, false.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Contains(System.String)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> element with specified name is in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <param name="worksheetName">The name of the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to locate in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</param>
      <returns>
            True if <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> with specified name is found in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />; otherwise, false.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
            ExcelWorksheetCollection</see>.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.InsertCopy(System.Int32,System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Inserts a copy of an existing worksheet at the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
      <param name="worksheetName">Worksheet name.</param>
      <param name="sourceWorksheet">Source worksheet to copy.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.InsertEmpty(System.Int32,System.String)">
      <summary>
            Inserts empty worksheet at the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Item(System.Int32)">
      <summary>
            Gets the worksheet with the specified index.
            </summary>
      <param name="index">The zero-based index of the worksheet.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Item(System.String)">
      <summary>
            Gets the worksheet with the specified name.
            </summary>
      <param name="name">The name of the worksheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the worksheet at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the worksheet to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the worksheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Remove(System.Int32)">
      <summary>
            Removes the worksheet with the specified index.
            </summary>
      <param name="worksheetIndex">The zero-based index of the worksheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Remove(System.String)">
      <summary>
            Removes the worksheet with the specified name.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
            ExcelWorksheetCollection</see>.
            </summary>
      <returns>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataDelegateEventArgs">
      <summary>
            Arguments of ExtractDataDelegate.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.Action">
      <summary>
            Defines how the error will be handled.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.DataTableRow">
      <summary>
            Index of <see cref="T:System.Data.DataTable" /> row where an error has occurred.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.DataTableValue">
      <summary>
            Value of the <see cref="T:System.Data.DataTable" /> cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.DestinationTable">
      <summary>
            Destination <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.ErrorID">
      <summary>
            Description of error that occurred.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.ExcelValue">
      <summary>
            Value of the <see cref="T:GemBox.Spreadsheet.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.Mapping">
      <summary>
            Mapping of column which contains a cell where error occurred.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.WorksheetRow">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelRow" /> which contains a cell where error occurred.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataError">
      <summary>
            Possible errors that can occur while extracting to DataTable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataError.WrongType">
      <summary>
            Error that indicates that data in ExcelWorksheet can't convert to <see cref="T:System.Data.DataTable" /> type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataEventAction">
      <summary>
            Possible ways of proceeding after one of the events is fired while extracting to data table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.ThrowException">
      <summary>
            Throw exception after event has been handled.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.Continue">
      <summary>
            Continue extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.StopReading">
      <summary>
            Stop extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.SkipRow">
      <summary>
            Skip row.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataOptions">
      <summary>
            Options specified when extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.None">
      <summary>
            None of the options is set. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.StopAtFirstEmptyRow">
      <summary>
            Extracting data stops at the first empty row.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.SkipEmptyRows">
      <summary>
            When extracting data, skip all empty rows.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractToDataTableOptions">
      <summary>
            Represents options for extracting data from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExtractToDataTableOptions.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExtractToDataTableOptions.#ctor(System.String,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="E:GemBox.Spreadsheet.ExtractToDataTableOptions.ExcelCellToDataTableCellConverting">
      <summary>
            Event that fires when converting <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value to <see cref="T:System.Data.DataTable" /> cell value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.ExtractDataOptions">
      <summary>
            Gets or sets <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.ExtractDataOptions" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.MappingCollection">
      <summary>
            Gets the collection used for mapping <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> columns to <see cref="T:System.Data.DataTable" /> columns.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FileFormatLimitations">
      <summary>
            Represents file format limitations when saving <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to some format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FileFormatLimitations.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes instance of <see cref="T:GemBox.Spreadsheet.FileFormatLimitations" /> class.
            </summary>
      <param name="maxRows">Maximum number of rows.</param>
      <param name="maxColumns">Maximum number of columns.</param>
      <param name="maxColors">Maximum number of colors.</param>
      <param name="maxCellStyles">Maximum number of cell styles.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxCellStyles">
      <summary>
            Get maximum number of cell styles. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxColors">
      <summary>
            Get maximum number of colors. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxColumns">
      <summary>
            Get maximum number of columns. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxRows">
      <summary>
            Get maximum number of rows. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FillPatternStyle">
      <summary>
        <para>Represents the style of fill pattern being used for a cell format.</para>
        <para>Currently supported only in XLS and XLSX. For all other formats it defaults to either <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" /> or <see cref="F:GemBox.Spreadsheet.FillPatternStyle.Solid" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.None">
      <summary>
        <para>The fill style is <b>none</b> (no fill).</para>
        <para>When <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> and/or <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" /> are specified, a pattern of <see cref="F:GemBox.Spreadsheet.FillPatternStyle.None" /> overrides them and means the cell has no fill.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Solid">
      <summary>
        <para>The fill style is <b>solid</b>.</para>
        <para>When solid is specified, the <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor" /> is the only color rendered, even when a <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor" /> is also specified.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray6">
      <summary>
        <b>6% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray12">
      <summary>
        <b>12% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray25">
      <summary>
        <b>25% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray50">
      <summary>
        <b>50% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray75">
      <summary>
        <b>75% Gray</b> is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.HorizontalStripe">
      <summary>
        <b>Horizontal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.VerticalStripe">
      <summary>
        <b>Vertical Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.DiagonalStripe">
      <summary>
        <b>Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ReverseDiagonalStripe">
      <summary>
        <b>Reverse Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.DiagonalCrosshatch">
      <summary>
        <b>Diagonal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThickDiagonalCrosshatch">
      <summary>
        <b>Thick Diagonal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinHorizontalStripe">
      <summary>
        <b>Thin Horizontal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinVerticalStripe">
      <summary>
        <b>Thin Vertical Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinDiagonalStripe">
      <summary>
        <b>Thin Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinReverseDiagonalStripe">
      <summary>
        <b>Thin Reverse Diagonal Stripe</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinHorizontalCrosshatch">
      <summary>
        <b>Thin Horizontal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinDiagonalCrosshatch">
      <summary>
        <b>Thin Diagonal Crosshatch</b> pattern.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthColumn">
      <summary>
            Class that represents column in Fixed-Width Text format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthColumn.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthColumn" /> class.
            </summary>
      <param name="width">The column width.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.LoadConverter">
      <summary>
            Gets or sets the converter for converting value from file to <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value when loading from Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.SaveConverter">
      <summary>
            Gets or sets the converter for converting <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value to text when saving to Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.Width">
      <summary>
            Gets or sets a value that represents column width.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthLoadOptions">
      <summary>
            Represents options for loading from Fixed-Width Text file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.#ctor(GemBox.Spreadsheet.FixedWidthColumn[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.FixedWidthColumn})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.Columns">
      <summary>
            Gets the list of column definitions for Fixed-Width Text file. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading Fixed-Width Text file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being loaded from Fixed-Width Text file.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthSaveOptions">
      <summary>
            Represents options for saving to Fixed-Width Text file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.#ctor(GemBox.Spreadsheet.FixedWidthColumn[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.FixedWidthColumn})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Columns">
      <summary>
            Gets the List of column definitions for saving data. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.ContentType">
      <summary>
            Gets the content-type for Fixed-Width Text file format: <b>"text/plain; charset=" + <see cref="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b>.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to Fixed-Width Text file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being saved to Fixed-Width Text file.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FontSettings">
      <summary>
            Contains font related settings which are used when printing a spreadsheet or exporting a spreadsheet to a file format that requires font information.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseDirectory">
      <summary>
            Gets or sets base directory path where component looks for fonts. Directory path can be absolute or relative to <see cref="M:System.IO.Directory.GetCurrentDirectory" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseUri">
      <summary>
            Gets or sets base <see cref="T:System.Uri" /> where component looks for fonts. <see cref="T:System.Uri" /> path should end with <see cref="F:System.IO.Path.DirectorySeparatorChar" /> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FormattedExcelDrawing">
      <summary>
            Represents a formatted drawing (picture, chart, etc.) which can be exported to PDF, XPS, image or be printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedExcelDrawing.Content">
      <summary>
            Gets the drawing content.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedExcelDrawing.Height">
      <summary>
            Gets the drawing height in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Print">
      <summary>
            Prints the drawing to the default printer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Print(System.String)">
      <summary>
            Prints the drawing to the specified printer.
            </summary>
      <param name="printerName">Printer name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Print(System.String,GemBox.Spreadsheet.PrintOptions)">
      <summary>
            Prints the drawing to the specified printer according to specified options.
            </summary>
      <param name="printerName">Printer name.</param>
      <param name="options">Print options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the drawing in the specified stream.
            </summary>
      <param name="stream">The stream in which to save the drawing.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.Object,System.String)">
      <summary>
            Saves the drawing to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the drawing to a client browser. File format is resolved from <paramref name="fileName" /> extension. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <exception cref="T:System.InvalidOperationException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the drawing to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream or a System.Net.Http.HttpResponseMessage and sets appropriate HTTP response headers (Content-Type and Content-Disposition). Use this method in ASP.NET application to send the drawing to a client browser. File format is defined with <paramref name="options" /> parameter. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">System.Web.HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or System.Web.HttpResponseBase object or System.Net.Http.HttpResponseMessage object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String)">
      <summary>
            Saves the drawing to a file with the specified path. Path must include file extension.
            </summary>
      <param name="path">The path to which to save the drawing.</param>
      <exception cref="T:System.InvalidOperationException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.FormattedExcelDrawing.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the drawing to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the drawing.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FormattedExcelDrawing.Width">
      <summary>
            Gets the drawing width in <see cref="F:GemBox.Spreadsheet.LengthUnit.Point" />s.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitEventArgs">
      <summary>
            Provides data for the <see cref="E:GemBox.Spreadsheet.SpreadsheetInfo.FreeLimitReached" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FreeLimitEventArgs.File">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> on which limit was reached.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FreeLimitEventArgs.FreeLimitReachedAction">
      <summary>
            Gets or sets the choice for proceeding when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitReachedAction">
      <summary>
            Type of action that can be chosen when free limit is reached.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.ThrowException">
      <summary>
            Throw <see cref="T:GemBox.Spreadsheet.FreeLimitReachedException" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.Stop">
      <summary>
            Stop reading/writing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.ContinueAsTrial">
      <summary>
            Continue reading/writing using trial mode.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitReachedException">
      <summary>
            Exception that occurs when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.GradientShadingStyle">
      <summary>
        <para>Represents a shading style and variant of a gradient fill effect.</para>
        <para>Gradient fill is currently supported in XLSX and partially in rendering formats (PDF, XPS and image formats).</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.None">
      <summary>
            Cell doesn't have any gradient fill effect.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.HorizontalHigh">
      <summary>
            Linear gradient where the first color starts at the top side of the cell and blends horizontally with the second color which starts at the bottom side of the cell [1 - 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.HorizontalLow">
      <summary>
            Linear gradient where the first color starts at the bottom side of the cell and blends horizontally with the second color which starts at the top side of the cell [2 - 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.Horizontal">
      <summary>
            Linear gradient where the first color starts at the top and bottom sides of the cell and blends horizontally with the second color which starts in the middle of the cell [1 - 2 - 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.VerticalLow">
      <summary>
            Linear gradient where the first color starts at the left side of the cell and blends vertically with the second color which starts at the right side of the cell [1 | 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.VerticalHigh">
      <summary>
            Linear gradient where the first color starts at the right side of the cell and blends vertically with the second color which starts at the left side of the cell [2 | 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.Vertical">
      <summary>
            Linear gradient where the first color starts at the left and right sides of the cell and blends vertically with the second color which starts in the middle of the cell [1 | 2 | 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalUpHigh">
      <summary>
            Linear gradient where the first color starts at the top-left corner of the cell and blends diagonally with the second color which starts at the bottom-right corner of the cell [1 / 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalUpLow">
      <summary>
            Linear gradient where the first color starts at the bottom-right corner of the cell and blends diagonally with the second color which starts at the top-left corner of the cell [2 / 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalUp">
      <summary>
            Linear gradient where the first color starts at the top-left and bottom-right corners of the cell and blends diagonally with the second color which starts in the middle of the cell [1 / 2 / 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalDownHigh">
      <summary>
            Linear gradient where the first color starts at the top-right corner of the cell and blends diagonally with the second color which starts at the bottom-left corner of the cell [2 \ 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalDownLow">
      <summary>
            Linear gradient where the first color starts at the bottom-left corner of the cell and blends diagonally with the second color which starts at the top-right corner of the cell [1 \ 2].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.DiagonalDown">
      <summary>
            Linear gradient where the first color starts at the top-right and bottom-left corners of the cell and blends diagonally with the second color which starts in the middle of the cell [1 \ 2 \ 1].
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromTopLeftCorner">
      <summary>
            Path gradient where the first color starts at the top-left corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromTopRightCorner">
      <summary>
            Path gradient where the first color starts at the top-right corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromBottomLeftCorner">
      <summary>
            Path gradient where the first color starts at the bottom-left corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromBottomRightCorner">
      <summary>
            Path gradient where the first color starts at the bottom-right corner of the cell and blends with the second color which starts at the other corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.FromCenter">
      <summary>
            Path gradient where the first color starts in the middle of the cell and blends with the second color which starts at the corners of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.GradientShadingStyle.Complex">
      <summary>
            Gradient fill effect is too complex to be described with this enumeration.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooter">
      <summary>
            Represents worksheet's header or footer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooter.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooter" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.CenterSection">
      <summary>
            Gets or sets center section.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.LeftSection">
      <summary>
            Gets or sets left section.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.RightSection">
      <summary>
            Gets or sets right section.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterFieldType">
      <summary>
            Represents types of <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> predefined fields.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.PageNumber">
      <summary>
            Page number.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.NumberOfPages">
      <summary>
            Total number of pages.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.Date">
      <summary>
            Current date.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.Time">
      <summary>
            Current time.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.SheetName">
      <summary>
            Sheet name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.FileName">
      <summary>
            File name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.FilePath">
      <summary>
            File path.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterPage">
      <summary>
            Represents header/footer which should be shown on a specific worksheet page (first page, even pages and all other pages).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterPage.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterPage.Footer">
      <summary>
            Gets or sets footer for this <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> instance.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterPage.Header">
      <summary>
            Gets or sets header for this <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> instance.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterSection">
      <summary>
            Represents <see cref="T:GemBox.Spreadsheet.HeaderFooter">header or footer</see> section.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> constructor.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(GemBox.Spreadsheet.HeaderFooterFieldType)">
      <summary>
            Appends special header/footer field to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="fieldType">Special Header/Footer field.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(GemBox.Spreadsheet.HeaderFooterFieldType,GemBox.Spreadsheet.ExcelFont)">
      <summary>
            Appends special header/footer field to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="fieldType">Special Header/Footer field.</param>
      <param name="font">Desired <see cref="T:GemBox.Spreadsheet.ExcelFont" /> font.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(System.String)">
      <summary>
            Appends text to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="text">Text to append.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(System.String,GemBox.Spreadsheet.ExcelFont)">
      <summary>
            Appends text to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="text">Text to append.</param>
      <param name="font">Desired <see cref="T:GemBox.Spreadsheet.ExcelFont" /> font.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="pictureStream">Stream of the picture to be added.</param>
      <param name="imageFormat">Picture format.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Int32,System.Int32)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="pictureStream">Stream of the picture to be added.</param>
      <param name="imageFormat">Picture format.</param>
      <param name="width">Picture width (in pixels).</param>
      <param name="height">Picture height (in pixels).</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.String)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="fileName">The fileName of the file that contains picture.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.String,System.Int32,System.Int32)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="fileName">The fileName of the file that contains picture.</param>
      <param name="width">Picture width (in pixels).</param>
      <param name="height">Picture height (in pixels).</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterSection.Content">
      <summary>
            Gets or sets <see cref="T:GemBox.Spreadsheet.HeaderFooter">header/footer</see> section content.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalAlignmentStyle">
      <summary>
            Represents available horizontal alignment options used in <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment" /> member. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General">
      <summary>
        <para>The horizontal alignment is general-aligned.</para>
        <para>Text data is left-aligned.</para>
        <para>Numbers, dates, and times are right-aligned.</para>
        <para>Boolean types are centered.</para>
        <para>Changing the alignment does not change the type of data.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Left">
      <summary>
        <para>The horizontal alignment is left-aligned.</para>
        <para>Aligns contents at the left edge of the cell.</para>
        <para>If an <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" /> amount is specified, the contents of the cell is indented from the left by the specified number of character spaces.</para>
        <para>The character spaces are based on the default font and font size for the workbook (<b><see cref="P:GemBox.Spreadsheet.CellStyleCollection.Normal" /></b> style).</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Center">
      <summary>
            The horizontal alignment is centered, meaning the text is centered across the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Right">
      <summary>
            The horizontal alignment is right-aligned, meaning that cell contents are aligned at the right edge of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Fill">
      <summary>
        <para>Indicates that the value of the cell should be filled across the entire width of the cell.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Justify">
      <summary>
        <para>The horizontal alignment is justified (flush left and right).</para>
        <para>For each line of text, aligns each line of the wrapped text in a cell to the right and left (except the last line).</para>
        <para>If no single line of text wraps in the cell, then the text is not justified.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.CenterAcross">
      <summary>
        <para>The horizontal alignment is centered across multiple cells.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Center" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Distributed">
      <summary>
        <para>Indicates that each 'word' in each line of text inside the cell is evenly distributed across the width of the cell, with flush right and left margins.</para>
        <para>When there is also an <see cref="P:GemBox.Spreadsheet.CellStyle.Indent" /> value to apply, both the left and right side of the cell are padded by the indent value.</para>
        <para>A 'word' is a set of characters with no space character in them.</para>
        <para>Two lines inside a cell are separated by a carriage return.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalPageBreak">
      <summary>
            Specifies a horizontal position where the new page begins when the worksheet is printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.FirstColumn">
      <summary>
            Index of the first column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.LastColumn">
      <summary>
            Index of the last column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.Row">
      <summary>
            Index of the first row of the new page.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalPageBreakCollection">
      <summary>
            Collection of horizontal page breaks (<see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.Add(System.Int32)">
      <summary>
            Ads a new horizontal page break above the specified row.
            </summary>
      <param name="row">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Ads a new horizontal page break above the specified row and within specified columns.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="firstColumn">The zero-based index of the first column.</param>
      <param name="lastColumn">The zero-based index of the last column.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreakCollection.Item(System.Int32)">
      <summary>
            Gets or sets the horizontal page break at the specified index.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlLoadOptions">
      <summary>
            Represents options for loading from HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.HtmlLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the HTML file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseFormatProvider">
      <summary>
            Gets or sets the format provider for the HTML file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading HTML file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlSaveOptions">
      <summary>
            Represents options for saving to HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.HtmlSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.ContentType">
      <summary>
            Gets the content-type for HTML file format:
            <list type="bullet"><item><description><b>message/rfc822</b> if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.HtmlType" /> is <see cref="F:GemBox.Spreadsheet.HtmlType.Mhtml" />, otherwise</description></item><item><description><b>"text/html; charset=" + <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.Encoding" />.<see cref="P:System.Text.Encoding.WebName" /></b>.</description></item></list></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.EmbedImages">
      <summary>
            Gets or sets a value indicating whether images are embedded directly within the HTML file in form of Base64 encoding.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Html file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath">
      <summary>
            Gets or sets the physical directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files will be saved.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectorySrcPath">
      <summary>
            Gets or sets the relative directory that will be used when referencing <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files in the HTML.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.HtmlType">
      <summary>
            Gets or sets the type of export.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to HTML file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.PicturesDirectoryImgSrcPath">
      <summary>
            Gets or sets the pictures directory that will be used when referencing images in the HTML and Javascript.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.PicturesDirectoryPath">
      <summary>
            Gets or sets the directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s will be physically saved.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.WriteCellAddress">
      <summary>
            Gets or sets a value indicating whether each td HTML element should contain data-cell attribute with cell address for this cell.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlType">
      <summary>
            Defines type of HTML export.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.Html">
      <summary>
            Export entire HTML document. Pictures are exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.HtmlTable">
      <summary>
            Export HTML table and its content. Pictures are exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.Mhtml">
      <summary>
            Export entire HTML document and images to MIME HTML (MHTML) format. Pictures are always exported.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ImageSaveFormat">
      <summary>
            An enumeration of supported image file formats when saving the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to an image using a <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Bmp">
      <summary>
            Bitmap (BMP) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Gif">
      <summary>
            Graphics Interchange Format (GIF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Jpeg">
      <summary>
            Joint Photographics Experts Group (JPEG) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Png">
      <summary>
            Portable Network Graphics (PNG) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Tiff">
      <summary>
            Tagged Image File Format (TIFF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Wmp">
      <summary>
            Windows Media Photo format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ImageSaveOptions">
      <summary>
            Represents a class which stores saving options for image files.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.#ctor(GemBox.Spreadsheet.ImageSaveFormat)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /> class for a specific image format.
            </summary>
      <param name="imageFormat">The image format.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.ContentType">
      <summary>
            Gets the content-type for image file format:
            <list type="bullet"><item><description><b>image/png</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Png" />,</description></item><item><description><b>image/jpeg</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Jpeg" />,</description></item><item><description><b>image/gif</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Gif" />,</description></item><item><description><b>image/bmp</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Bmp" />,</description></item><item><description><b>image/tiff</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Tiff" />,</description></item><item><description><b>image/vnd.ms-photo</b> if <see cref="P:GemBox.Spreadsheet.ImageSaveOptions.Format" /> is <see cref="F:GemBox.Spreadsheet.ImageSaveFormat.Wmp" />.</description></item></list></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Format">
      <summary>
            Gets or sets the image format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Height">
      <summary>
            Gets or sets the image height in pixels.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to image file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.PageCount">
      <summary>
        <para>Gets or sets the number of pages which should be saved to a multi-frame image.</para>
        <para>If image format doesn't support multiple frames, this property is ignored.</para>
        <para>Default value is 1.</para>
        <para>To save all pages, set value to <see cref="F:System.Int32.MaxValue" />.</para>
        <para>Only Tagged Image File Format (TIFF) and Graphics Interchange Format (GIF) format images support multiple frames.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.PageNumber">
      <summary>
            Gets or sets the zero-based page number of the document's page which should be saved to an image.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save a page from the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Width">
      <summary>
            Gets or sets the image width in pixels.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IndividualBorder">
      <summary>
            Represents single border type of a cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp">
      <summary>
            Diagonal-up border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown">
      <summary>
            Diagonal-down border.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.InsertDataTableOptions">
      <summary>
            Represents options for inserting data from <see cref="T:System.Data.DataTable" /> to <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor(System.String)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to insert column headers.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.InsertDataTableOptions.DataTableCellToExcelCellConverting">
      <summary>
            Event that fires when converting <see cref="T:System.Data.DataTable" /> cell value to <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IoOperation">
      <summary>
            Possible operations that can fire notification events.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsReading">
      <summary>
            XLS reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.CsvReading">
      <summary>
            CSV reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsWriting">
      <summary>
            XLS writing methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.CsvWriting">
      <summary>
            CSV writing methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsxReading">
      <summary>
            XLSX reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsxWriting">
      <summary>
            XLSX writing methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.OdsReading">
      <summary>
            ODS reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.OdsWriting">
      <summary>
            ODS writing methods.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IoWarningEventArgs">
      <summary>
            Warning event arguments class used by the event which is raised on warning happens in the excel lite library
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.IoWarningEventArgs.FileName">
      <summary>
            Gets the file name passed to the XLS / CSV file reading / writing method.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.IoWarningEventArgs.Operation">
      <summary>
            Indicates which operation caused this event to fire.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.IoWarningEventArgs.WarningMsg">
      <summary>
            Gets the message explaining the specific warning.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IoWarningEventHandler">
      <summary>
            Delegate for handling the notification events.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LengthUnit">
      <summary>
            Represents the measurement unit for measuring length or distance.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Pixel">
      <summary>
            Pixel (1 inch is equal as 96 pixels). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Point">
      <summary>
            Point (1 inch is equal as 72 points).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Inch">
      <summary>
            Inch.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Millimeter">
      <summary>
            Millimeter (10 millimeters are equal as 1 centimeter).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Centimeter">
      <summary>
            Centimeter (1 inch is around 2.54 centimeters).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Twip">
      <summary>
            Twip (twentieth of a point, 1 point is equal as 20 twips).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Emu">
      <summary>
            English Metric Unit (1 point is equal as 12,700 EMUs)
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.ZeroCharacterWidth256thPart">
      <summary>
            Unit is 1/256th of the width of the zero character in default font (width of zero character is fixed to 7 pixel).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.ZeroCharacterWidth">
      <summary>
            Unit is the width of the zero character in default font (width of zero character is fixed to 7 pixel).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LengthUnitConverter">
      <summary>
            Utility class used for converting values between various <see cref="T:GemBox.Spreadsheet.LengthUnit" /> measurement units.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.LengthUnitConverter.Convert(System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Converts the specified <paramref name="length" /> from <paramref name="sourceUnit" /> measurement unit to <paramref name="destinationUnit" /> measurement unit.
            </summary>
      <param name="length">The length that will be converted.</param>
      <param name="sourceUnit">The source measurement unit.</param>
      <param name="destinationUnit">The destination measurement unit.</param>
      <returns>The <paramref name="length" /> expressed in <paramref name="destinationUnit" /> measurement unit.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.LimitEventArgs">
      <summary>
            Event parameters used for the <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitNear">ExcelFile.LimitNear</see> and <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitReached">ExcelFile.LimitReached</see> events.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.FileName">
      <summary>
            Gets the file name passed to the XLS / CSV file reading / writing method.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.MaxRowCount">
      <summary>
            Gets the maximum number of rows used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.Operation">
      <summary>
            Indicates which operation caused this event to fire.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.WorksheetCount">
      <summary>
            Gets the number of worksheets used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.WriteWarningWorksheet">
      <summary>
            Gets or sets whether the warning worksheet should be created when writing XLS file.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LimitEventHandler">
      <summary>
            Delegate for handling the <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitNear">ExcelFile.LimitNear</see> and <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitReached">ExcelFile.LimitReached</see> events.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LineStyle">
      <summary>
            Represents the line style of a border in a cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.None">
      <summary>
            The line style of a border is none (no border visible).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Thin">
      <summary>
            The line style of a border is thin.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Medium">
      <summary>
            The line style of a border is medium.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Dashed">
      <summary>
            The line style of a border is dashed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Dotted">
      <summary>
            The line style of a border is dotted.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Thick">
      <summary>
            The line style of a border is thick.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DoubleLine">
      <summary>
            Obsolete. Use <see cref="F:GemBox.Spreadsheet.LineStyle.Double" /> instead.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Double">
      <summary>
            The line style of a border is double line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Hair">
      <summary>
            The line style of a border is hairline.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashed">
      <summary>
            The line style of a border is medium dashed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DashDot">
      <summary>
            The line style of a border is dash-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashDot">
      <summary>
            The line style of a border is medium dash-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DashDotDot">
      <summary>
            The line style of a border is dash-dot-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashDotDot">
      <summary>
            The line style of a border is medium dash-dot-dot.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.SlantDashDot">
      <summary>
        <para>The line style of a border is slant-dash-dot.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.LineStyle.MediumDashDot" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.SlantedDashDot">
      <summary>
            Obsolete. Use <see cref="F:GemBox.Spreadsheet.LineStyle.SlantDashDot" /> instead.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LoadOptions">
      <summary>
            Represents a base class for loading options of various file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.CsvDefault">
      <summary>
            Gets the default options for loading from Character Separated Values file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.HtmlDefault">
      <summary>
            Gets the default options for loading from HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.OdsDefault">
      <summary>
            Gets the default options for loading from OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsDefault">
      <summary>
            Gets the default options for loading from XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsxDefault">
      <summary>
            Gets the default options for loading from XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.MultipleBorders">
      <summary>
            Represents multiple border types of a cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.None">
      <summary>
            No borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp">
      <summary>
            Diagonal-up border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown">
      <summary>
            Diagonal-down border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Horizontal">
      <summary>
            Horizontal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Vertical">
      <summary>
            Vertical borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Diagonal">
      <summary>
            Diagonal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Outside">
      <summary>
            Outside borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.All">
      <summary>
            All borders.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.NamedRange">
      <summary>
            Represents a named range in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.Delete">
      <summary>
            Deletes this named range from the named ranges collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.NamedRange" /> and is equal to this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.GlobalName">
      <summary>
            gets global flag
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.Name">
      <summary>
            Gets the named range name.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.op_Equality(GemBox.Spreadsheet.NamedRange,GemBox.Spreadsheet.NamedRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.op_Inequality(GemBox.Spreadsheet.NamedRange,GemBox.Spreadsheet.NamedRange)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.NamedRange" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.NamedRange" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.Range">
      <summary>
            Gets or sets the named cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.NamedRange" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.NamedRangeCollection">
      <summary>
            Collection of the descriptive names which are used 
            to represent cells, ranges of cells, formulas, or constant values.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.Add(System.String,GemBox.Spreadsheet.CellRange)">
      <summary>
            Adds a new named range. Named ranges are used to represent cells, ranges of cells,
            formulas or constant values.
            </summary>
      <param name="name">The user-defined name.</param>
      <param name="range">The range to be referred by name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.Add(System.String,GemBox.Spreadsheet.CellRange,System.Boolean)">
      <summary>
            Adds a new named range. Named ranges are used to represent cells, ranges of cells,
            formulas or constant values.
            </summary>
      <param name="name">The user-defined name.</param>
      <param name="range">The range to be referred by name.</param>
      <param name="globalName">sets the range as global if set to true</param>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Count">
      <summary>
            Gets the number of named ranges contained in the collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> at the specified index.
            </summary>
      <param name="index">Range index.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> with the specified name.
            </summary>
      <param name="name">Range name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(GemBox.Spreadsheet.CellRange)">
      <summary>
            Sets print area.
            </summary>
      <param name="range">Range of cells that we want set as print area.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(GemBox.Spreadsheet.CellRange[])">
      <summary>
            Sets multi-range print area.
            </summary>
      <param name="ranges">Ranges of cells that we want set as print area.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.CellRange})">
      <summary>
            Sets multi-range print area.
            </summary>
      <param name="ranges">Ranges of cells that we want set as print area.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelColumn,System.Int32)">
      <summary>
            Sets print titles (columns to repeat at left).
            </summary>
      <param name="startColumn">First column.</param>
      <param name="numberOfColumns">Number of columns that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelColumnRowBase,System.Int32,GemBox.Spreadsheet.ExcelColumnRowBase,System.Int32)">
      <summary>
            Sets print titles.
            </summary>
      <param name="startRow">First row.</param>
      <param name="numberOfRows">Number of rows that repeat.</param>
      <param name="startColumn">First column.</param>
      <param name="numberOfColumns">Number of columns that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelRow,System.Int32)">
      <summary>
            Sets print titles (rows to repeat at top).
            </summary>
      <param name="startRow">First row.</param>
      <param name="numberOfRows">Number of rows that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsLoadOptions">
      <summary>
            Represents options for loading from OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.OdsLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve ODS file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsLoadOptions.ReadDisplayValues">
      <summary>
            Read display values instead of stored values. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsOptions">
      <summary>
            Options specified when loading ODS files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.None">
      <summary>
            Do not preserve ODS parts and ignore display values (display strings). Only parts recognized 
            by GemBox.Spreadsheet API will be loaded.
            Use this if you are just loading ODS file or you don't want to preserve unrecognized 
            ODS parts for next save.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.PreserveKeepOpen">
      <summary>
            Preserves unrecognized ODS parts in a way it keeps loaded file open. Use if locking of input file
            for reading is not a problem and you want to save RAM/CPU when working with large files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.PreserveMakeCopy">
      <summary>
            Preserves unrecognized ODS parts in a way it makes a copy of input file in memory. Use if 
            locking of input file presents a problem or you are not working with large files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.ReadDisplayValues">
      <summary>
            Reads display values instead of stored values. Values in ODS are stored as value - display string pairs.
            Normally stored value is read but that looses number formatting. If you want to read value as
            formatted display string (for example, date as "Wednesday, May 5th, 2009" string), set this flag.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsSaveOptions">
      <summary>
            Represents options for saving to OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.OdsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsSaveOptions.ContentType">
      <summary>
            Gets the content-type for ODS file format:
            <list type="bullet"><item><description><b>application/vnd.oasis.opendocument.spreadsheet-template</b> if workbook is template (file extension is .odt), otherwise</description></item><item><description><b>application/vnd.oasis.opendocument.spreadsheet</b>.</description></item></list></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to ODS file format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreak">
      <summary>
            Base class for all page breaks.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreakCollection">
      <summary>
            Base class for page break collections.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.Clear">
      <summary>
            Removes all page breaks. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PageBreakCollection.Count">
      <summary>
            Gets the number of page breaks contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the page break at the specified index.
            </summary>
      <param name="index">The zero-based index of the page break to remove.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreakCollection`1">
      <summary>
            Generic base class for page break collections.
            </summary>
      <typeparam name="T">Type of the items in the collection, either <see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" /> or <see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />.</typeparam>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.PanePosition">
      <summary>
            Represents the position of the pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.BottomRight">
      <summary>
            Bottom right pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.TopRight">
      <summary>
            Top right pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.BottomLeft">
      <summary>
            Bottom left pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.TopLeft">
      <summary>
            Top left pane.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PanesState">
      <summary>
            Represents the state of the pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.Frozen">
      <summary>
            Panes are frozen, but were not split being frozen. In this state, when the panes are unfrozen again, a single pane results, with no split. In this state, the split bars are not adjustable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.FrozenSplit">
      <summary>
            Panes are frozen and were split before being frozen. In this state, when the panes are unfrozen again, the split remains, but is adjustable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.Split">
      <summary>
            Panes are split, but not frozen. In this state, the split bars are adjustable by the user.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PaperType">
      <summary>
            Specifies the paper type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A3">
      <summary>
            A3 (11.69 inch X 16.54 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A4">
      <summary>
            A4 (8.27 inch X 11.69 inch). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A5">
      <summary>
            A5 (5.83 inch X 8.27 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A6">
      <summary>
            A6 (4.13 inch X 5.83 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.B4">
      <summary>
            B4 (JIS, 7.17 inch X 10.12 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.B5">
      <summary>
            B5 (ISO, 6.93 inch X 9.84 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Letter">
      <summary>
            Letter (8.5 inch X 11 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Legal">
      <summary>
            Legal (8.5 inch X 14 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Executive">
      <summary>
            Executive (7.25 inch X 10.5 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Paper11x17">
      <summary>
            11x17 (11 inch X 17 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.EnvelopeDL">
      <summary>
            Envelope DL (4.33 inch X 8.66 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.EnvelopeC5">
      <summary>
            Envelope C5 (6.38 inch X 9.02 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Custom">
      <summary>
            Custom paper type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfPermissions">
      <summary>
            Defines operations that are allowed to a user on an encrypted PDF document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.None">
      <summary>
            Disallows all operations.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.Printing">
      <summary>
            Allows printing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.HighResolutionPrinting">
      <summary>
            Allows high resolution printing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ChangingTheDocument">
      <summary>
            Allows changing the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ContentCopying">
      <summary>
            Allows copying the content.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.ContentAccessibilityEnabled">
      <summary>
            Allow accessibility software to use the document contents.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.DocumentAssembly">
      <summary>
            If this is disabled, inserting, deleting or rotating pages, or creating bookmarks and thumbnails is prohibited.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PdfPermissions.All">
      <summary>
            Allows all operations.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfSaveOptions">
      <summary>
            Represents options for saving to Portable Document Format (PDF) file.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.ContentType">
      <summary>
            Gets the content-type for PDF file format: <b>application/pdf</b>.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.DocumentOpenPassword">
      <summary>
            Specifies the password required for opening the encrypted PDF document.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to PDF file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.Permissions">
      <summary>
            Gets or sets the operations that are allowed to a user on an encrypted PDF document.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.PermissionsPassword">
      <summary>
            Specifies the password for opening the encrypted PDF document without any access restrictions.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PositioningMode">
      <summary>
            Option that specify the moving and sizing behavior of the <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) in the worksheet. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.FreeFloating">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) will not move nor size with cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.Move">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) will move but not size with cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelDrawing" /> (picture, chart, etc.) will move and size with cells.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PrintOptions">
      <summary>
            Specifies information about how a spreadsheet is printed.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PrintOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PrintOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PrintOptions" /> class by using an XML stream (that contains a PrintTicket document) that complies with the XML Print Schema.
            </summary>
      <param name="xmlStream">An XML stream that describes a print job and conforms to the Print Schema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlStream" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.CopyCount">
      <summary>
            Gets or sets the number of copies of the document to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.FromPage">
      <summary>
            Gets or sets the page index of the first page to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.PagesPerSheet">
      <summary>
            Gets or sets the number of pages that print on each printed side of a sheet of paper.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.ToPage">
      <summary>
            Gets or sets the index of the last page to print.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.RangeIndexingMode">
      <summary>
            Indexing modes used by <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Rectangular">
      <summary>
            Rectangular indexing mode. Rectangular cell range is higher than one row and wider than one column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Horizontal">
      <summary>
            Horizontal indexing mode. Horizontal cell range has 
            <see cref="P:GemBox.Spreadsheet.CellRange.Height">CellRange.Height</see> equal to 1.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Vertical">
      <summary>
            Vertical indexing mode. Vertical cell range has 
            <see cref="P:GemBox.Spreadsheet.CellRange.Width">CellRange.Width</see> equal to 1.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.RowColumnResolutionMethod">
      <summary>
            Defines different methods of <see cref="T:GemBox.Spreadsheet.CellStyle" /> resolution.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RowColumnResolutionMethod.RowOverColumn">
      <summary>
            Row has precedence over column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RowColumnResolutionMethod.ColumnOverRow">
      <summary>
            Column has precedence over row.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SaveOptions">
      <summary>
            Represents a base class for saving options of various file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.ContentType">
      <summary>
            Gets the content-type for this specific file format as defined in the RFC 2616.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.CsvDefault">
      <summary>
            Gets the default options for saving to Character Separated Values file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.HtmlDefault">
      <summary>
            Gets the default options for saving to HyperText Markup Language File format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.ImageDefault">
      <summary>
            Gets the default options for saving to image formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.Limitations">
      <summary>
            Gets limitations for saving to a file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.OdsDefault">
      <summary>
            Gets the default options for saving to OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.PdfDefault">
      <summary>
            Gets the default options for saving to Portable Document Format file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsDefault">
      <summary>
            Gets the default options for saving to, XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsxDefault">
      <summary>
            Gets the default options for saving to XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XpsDefault">
      <summary>
            Gets the default options for saving to XML Paper Specification file format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ScriptPosition">
      <summary>
            Defines the possible settings for vertical alignment of a text and is used in <see cref="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition" /> member to get superscript or subscript text without altering the font size.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Normal">
      <summary>
            Returns the text to the baseline, default, alignment, and returns it to the original font size.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Superscript">
      <summary>
        <para>Specifies that text should be superscript.</para>
        <para>Raises the text above the baseline and changes it to a smaller size.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Subscript">
      <summary>
        <para>Specifies that text should be subscript.</para>
        <para>Lowers the text below the baseline and changes it to a smaller size.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SelectionType">
      <summary>
            Defines the selection which will be saved or printed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SelectionType.ActiveSheet">
      <summary>
            Select <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SelectionType.EntireFile">
      <summary>
            Select all sheets in <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetHeaderFooter">
      <summary>
            Represents sheet header/footer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SheetHeaderFooter.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.SheetHeaderFooter" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.AlignWithMargins">
      <summary>
            Gets or sets if header/footer margin will align with page margins.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage">
      <summary>
            Gets or sets default header/footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DifferentFirst">
      <summary>
            Gets or sets if header/footer is different on the first page. 
            If <see langword="true" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter" /> are on the first page.
            If <see langword="false" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter" /> are ignored.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DifferentOddEven">
      <summary>
            Gets or sets if there are different headers/footers on the even and odd pages.
            If <see langword="true" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Header" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter" /> specify page header and footer values for odd
            and even pages. 
            If <see langword="false" /> then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Header" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer" /> is used, even when <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter" /> are present.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter">
      <summary>
            Gets or sets even footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader">
      <summary>
            Gets or sets even header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenPage">
      <summary>
            Gets or sets header/footer for even pages.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter">
      <summary>
            Gets or sets first footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader">
      <summary>
            Gets or sets first header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstPage">
      <summary>
            Gets or sets first page header/footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer">
      <summary>
            Gets or sets default footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.HasEvenPage">
      <summary>
            Returns <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenPage" /> header/footer is specified.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.HasFirstPage">
      <summary>
            Returns <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstPage" /> header/footer is specified.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.Header">
      <summary>
            Gets or sets default header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.ScaleWithDoc">
      <summary>
            Gets or sets if headers/footers will be scaled with document scaling.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetVisibility">
      <summary>
            Script positions used in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Visibility">ExcelWorksheet.Visibility</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.Visible">
      <summary>
            Sheet is visible.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.Hidden">
      <summary>
            Sheet is hidden, but is displayed in unhide dialog.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.VeryHidden">
      <summary>
            Sheet is very hidden and can be made visible only programmatically.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SortDescription">
      <summary>
            Specifies the column, sorting order and optional custom comparison used in <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SortDescription.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SortDescription" /> class with specified sorting column index.
            Valid column indexes are between 0 and <see cref="P:GemBox.Spreadsheet.CellRange.LastColumnIndex" /> - <see cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex" />, inclusive.
            </summary>
      <param name="columnRangeIndex">The column index in the <see cref="T:GemBox.Spreadsheet.CellRange" /> on which <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method has been invoked.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SortDescription.#ctor(System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SortDescription" /> class with specified sorting column index and sort direction.
            Valid column indexes are between 0 and <see cref="P:GemBox.Spreadsheet.CellRange.LastColumnIndex" /> - <see cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex" />, inclusive.
            </summary>
      <param name="columnRangeIndex">The column index in the <see cref="T:GemBox.Spreadsheet.CellRange" /> on which <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method has been invoked.</param>
      <param name="isAscending">A value indicating whether sort direction is ascending or descending.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.SortDescription.ColumnRangeIndex">
      <summary>
            Gets the column index in the <see cref="T:GemBox.Spreadsheet.CellRange" /> on which <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method has been invoked.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SortDescription.Comparison">
      <summary>
            Gets or sets the comparison that can be used to override default comparison.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SortDescription.IsAscending">
      <summary>
            Gets a value indicating whether sort direction is ascending or descending.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetColor">
      <summary>
            Represents a spreadsheet color.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.B">
      <summary>
            Gets the blue component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.Equals(GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Determines whether the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <param name="other">The other <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.</param>
      <returns>
        <see langword="true" /> if the <paramref name="other" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> and is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.FromArgb(System.Int32)">
      <summary>
            Creates a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure from a 32-bit ARGB value.
            </summary>
      <param name="argb">A value specifying the 32-bit ARGB value.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure with the specified value.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
      <param name="red">The red component value for the new <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />. Valid values are 0 through 255.</param>
      <param name="green">The green component value for the new <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />. Valid values are 0 through 255.</param>
      <param name="blue">The blue component value for the new <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />. Valid values are 0 through 255.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure with the specified values.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Parameter <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.FromName(GemBox.Spreadsheet.ColorName)">
      <summary>
            Creates a <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure from the specified predefined color.
            </summary>
      <param name="name">An element of the <see cref="T:GemBox.Spreadsheet.ColorName" /> enumeration.</param>
      <returns>A <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure with the specified value.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.G">
      <summary>
            Gets the green component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.IsEmpty">
      <summary>
            Specifies whether this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure is uninitialized.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Equality(GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Implicit(GemBox.Spreadsheet.SpreadsheetColor)~System.Drawing.Color">
      <summary>
            Performs an implicit conversion from <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> to <see cref="T:System.Drawing.Color" />.
            </summary>
      <param name="color">The input <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <returns>
            The output <see cref="T:System.Drawing.Color" /> which is the result of the conversion.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Implicit(System.Drawing.Color)~GemBox.Spreadsheet.SpreadsheetColor">
      <summary>
            Performs an implicit conversion from <see cref="T:System.Drawing.Color" /> to <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.
            </summary>
      <param name="color">The input <see cref="T:System.Drawing.Color" /> color.</param>
      <returns>
            The output <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> which is the result of the conversion.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.op_Inequality(GemBox.Spreadsheet.SpreadsheetColor,GemBox.Spreadsheet.SpreadsheetColor)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetColor.R">
      <summary>
            Gets the red component value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.ToArgb">
      <summary>
            Gets the 32-bit ARGB value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> structure.
            </summary>
      <returns>The 32-bit ARGB value of this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.SpreadsheetColor" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetException">
      <summary>
            Represents errors that can occur in the GemBox.Spreadsheet component. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with a specified error message. 
            </summary>
      <param name="msg">Message string.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with a specified error message 
            and a reference to the inner exception that is the cause of this exception. 
            </summary>
      <param name="msg">Message string.</param>
      <param name="inner">Inner exception.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetHyperlink">
      <summary>
            Hyperlink class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is a <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> and is equal to this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.Exists">
      <summary>
            If hyperlink exists returns true, otherwise returns false.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.IsExternal">
      <summary>
            Defines if hyperlink location is in this excel file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.Location">
      <summary>
            Gets or sets the location string for hyperlink.
            <remarks>URL have to be in escaped format(You can use<see cref="M:System.Uri.EscapeUriString(System.String)">System.Uri.EscapeUriString</see> method).</remarks></summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.op_Equality(GemBox.Spreadsheet.SpreadsheetHyperlink,GemBox.Spreadsheet.SpreadsheetHyperlink)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlink.op_Inequality(GemBox.Spreadsheet.SpreadsheetHyperlink,GemBox.Spreadsheet.SpreadsheetHyperlink)">
      <summary>
            Determines whether <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are not equal.
            </summary>
      <param name="first">The first <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <param name="second">The second <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="first" /> and <paramref name="second" /> <see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />s are not equal; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.ToolTip">
      <summary>
            Gets or sets ToolTip for hyperlink.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection">
      <summary>
            Collection of hyperlinks (<see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Clear">
      <summary>
            Removes all hyperlinks. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Count">
      <summary>
            Gets the number of hyperlinks contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Item(System.Int32)">
      <summary>
            Gets the hyperlink at the specified index.
            </summary>
      <param name="index">The zero-based index of the hyperlink.</param>
      <returns>The hyperlink at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Argument <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the hyperlink at the specified index.
            </summary>
      <param name="index">The zero-based index of the hyperlink to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetInfo">
      <summary>
            Contains static licensing methods and diagnostic information about executing GemBox.Spreadsheet assembly.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.SpreadsheetInfo.FreeLimitReached">
      <summary>
            Occurs in loading or saving <see cref="T:GemBox.Spreadsheet.ExcelFile" /> when GemBox.Spreadsheet assembly is used with <b>FREE-LIMITED-KEY</b> license key and free limit is reached.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetInfo.FullVersion">
      <summary>
            GemBox.Spreadsheet assembly full version.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetInfo.SetLicense(System.String)">
      <summary>
            Call this method from your application to set GemBox.Spreadsheet serial key.
            </summary>
      <param name="serialKey">Serial key.</param>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetInfo.Title">
      <summary>
            GemBox.Spreadsheet assembly title.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Style">
      <summary>
            Represents a workbook (master) style which can be shared by multiple cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.Hidden">
      <summary>
            Gets or sets a value indicating whether this style is hidden in the application UI.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeAlignment">
      <summary>
            Gets or sets a value indicating whether the alignment formatting specified for this style will be used when this style is applied to a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeBorder">
      <summary>
            Gets or sets a value indicating whether the border formatting specified for this style will be used when this style is applied to a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeFill">
      <summary>
            Gets or sets a value indicating whether the fill formatting specified for this style will be used when this style is applied to a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeFont">
      <summary>
            Gets or sets a value indicating whether the font formatting specified for this style will be used when this style is applied to a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeNumber">
      <summary>
            Gets or sets a value indicating whether the number formatting specified for this style will be used when this style is applied to a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.IncludeProtection">
      <summary>
            Gets or sets a value indicating whether the protection formatting specified for this style will be used when this style is applied to a cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Style.Name">
      <summary>
            Gets or sets the name of this style.
            </summary>
      <exception cref="T:System.InvalidOperationException">Name cannot be changed if style is built-in.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.UnderlineStyle">
      <summary>
            Represents the different types of possible underline formatting used in <see cref="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle" /> member.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.None">
      <summary>
            No underline.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.Single">
      <summary>
            Single-line underlining under each character in the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.Double">
      <summary>
            Double-line underlining under each character in the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.SingleAccounting">
      <summary>
        <para>Single-line accounting underlining under each character in the cell.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.UnderlineStyle.Single" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.DoubleAccounting">
      <summary>
        <para>Double-line accounting underlining under each character in the cell.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.UnderlineStyle.Double" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalAlignmentStyle">
      <summary>
            Represents available vertical alignment options used in <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment" /> member. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Top">
      <summary>
            The vertical alignment is aligned-to-top.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Center">
      <summary>
            The vertical alignment is centered across the height of the cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Bottom">
      <summary>
            The vertical alignment is aligned-to-bottom.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Justify">
      <summary>
        <para>When text direction is horizontal: the vertical alignment of lines of text is distributed vertically, where each line of text inside the cell is evenly distributed across the height of the cell, with flush top and bottom margins.</para>
        <para>When text direction is vertical: similar behavior as horizontal justification. The alignment is justified (flush top and bottom in this case). For each line of text, each line of the wrapped text in a cell is aligned to the top and bottom (except the last line). If no single line of text wraps in the cell, then the text is not justified.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Top" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Distributed">
      <summary>
        <para>When text direction is horizontal: the vertical alignment of lines of text is distributed vertically, where each line of text inside the cell is evenly distributed across the height of the cell, with flush top and bottom margins.</para>
        <para>When text direction is vertical: behaves exactly as distributed horizontal alignment. The first words in a line of text (appearing at the top of the cell) are flush with the top edge of the cell, and the last words of a line of text are flush with the bottom edge of the cell, and the line of text is distributed evenly from top to bottom.</para>
        <para>This option is currently not supported in PDF, XPS and image file formats and defaults to <see cref="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Center" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalPageBreak">
      <summary>
            Specifies a vertical position where the new page begins when the worksheet is printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.Column">
      <summary>
            Index of the first column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.FirstRow">
      <summary>
            Index of the first row of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.LastRow">
      <summary>
            Index of the last row of the new page.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalPageBreakCollection">
      <summary>
            Collection of vertical page breaks (<see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.Add(System.Int32)">
      <summary>
            Ads a new vertical page break left to the specified column.
            </summary>
      <param name="column">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Ads a new vertical page break left to the specified column and within specified rows.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="firstRow">The zero-based index of the first row.</param>
      <param name="lastRow">The zero-based index of the last row.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreakCollection.Item(System.Int32)">
      <summary>
            Gets or sets the vertical page break at the specified index.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ViewType">
      <summary>
            Specifies the view type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.Normal">
      <summary>
            Normal view
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.PageBreakPreview">
      <summary>
            Page break preview
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.PageLayout">
      <summary>
            Page Layout View
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WorksheetPanes">
      <summary>
            Represents the worksheet panes.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(GemBox.Spreadsheet.PanesState,System.Single,System.Single,System.String,GemBox.Spreadsheet.PanePosition)">
      <summary>
            Worksheet panes constructor.
            </summary>
      <param name="state">State of the panes.</param>
      <param name="xSplit">If the panes are frozen, xSplit represents the number of columns visible in the top right pane. If the panes are not frozen, xSplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.</param>
      <param name="ySplit">If the panes are frozen, ySplit represents the number of rows visible in the top right pane. If the panes are not frozen, ySplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.</param>
      <param name="topLeftCell">Top left visible cell in the bottom right pane.</param>
      <param name="activePane">Position of the active pane.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(GemBox.Spreadsheet.WorksheetPanes)">
      <summary>
            Copy constructor.
            </summary>
      <param name="sourcePane">Source pane.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.ActivePane">
      <summary>
            Gets or sets the active pane.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.State">
      <summary>
            Gets or sets the state of the panes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.TopLeftCell">
      <summary>
            Gets or sets the top left visible cell in the bottom right pane. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.XSplit">
      <summary>
            Gets or sets the XSplit value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.YSplit">
      <summary>
            Gets or sets the XSplit value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WorksheetProtection">
      <summary>
            Protection settings.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowDeletingColumns">
      <summary>
            Gets or sets if deleting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowDeletingRows">
      <summary>
            Gets or sets if deleting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowEditingObjects">
      <summary>
            Gets or sets if editing objects is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowEditingScenarios">
      <summary>
            Gets or sets if editing scenarios is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingCells">
      <summary>
            Gets or sets if formatting cells is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingColumns">
      <summary>
            Gets or sets if formatting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingRows">
      <summary>
            Gets or sets if formatting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingColumns">
      <summary>
            Gets or sets if inserting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingHyperlinks">
      <summary>
            Gets or sets if inserting hyperlinks is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingRows">
      <summary>
            Gets or sets if inserting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSelectingLockedCells">
      <summary>
            Gets or sets if selecting locked cells is allowed.
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSelectingUnlockedCells">
      <summary>
            Gets or sets if selecting unlocked cells is allowed.
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSorting">
      <summary>
            Gets or sets if sorting is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowUsingAutoFilter">
      <summary>
            Gets or sets if using autofilter is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowUsingPivotTableReports">
      <summary>
            Gets or sets if using pivot table reports is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.PasswordHash">
      <summary>
            Gets or sets the password hash for protected sheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetProtection.SetPassword(System.String)">
      <summary>
            Sets the password for protected sheet.
            </summary>
      <param name="password">The password.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsLoadOptions">
      <summary>
            Represents options for loading from XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsLoadOptions.PreserveOptions">
      <summary>
            Gets or sets <see cref="T:GemBox.Spreadsheet.XlsOptions" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsOptions">
      <summary>
            Options specified when reading XLS files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.None">
      <summary>
            Do not preserve records. Only records fully supported by GemBox.Spreadsheet API will be loaded.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveGlobalRecords">
      <summary>
            Preserve global (workbook) records.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveWorksheetRecords">
      <summary>
            Preserve worksheet records.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveSummaries">
      <summary>
            Preserve summaries.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveMacros">
      <summary>
            Preserve macros and VBA code.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveAll">
      <summary>
            Preserve all possible information.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsSaveOptions">
      <summary>
            Represents options for saving to, XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsSaveOptions.ContentType">
      <summary>
            Gets the content-type for XLS file format: <b>application/vnd.ms-excel</b>.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLS file format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxLoadOptions">
      <summary>
            Represent options for loading from XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.Password">
      <summary>
            Gets or sets the password to open protected / encrypted workbook.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve XLSX file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxOptions">
      <summary>
            Options specified when reading XLSX files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxOptions.None">
      <summary>
            Do not preserve XLSX parts. Only parts recognized by GemBox.Spreadsheet API will be loaded.
            Use this if you are just loading XLSX file or you don't want to preserve unrecognized 
            XLSX parts for next save.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxOptions.PreserveKeepOpen">
      <summary>
            Preserves unrecognized XLSX parts in a way it keeps loaded file open. Use if locking of input file
            for reading is not a problem and you want to save RAM/CPU when working with large files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxOptions.PreserveMakeCopy">
      <summary>
            Preserves unrecognized XLSX parts in a way it makes a copy of input file in memory. Use if 
            locking of input file presents a problem or you are not working with large files.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxSaveOptions">
      <summary>
            Represent options for saving to XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.ContentType">
      <summary>
            Gets the content-type for XLSX file format:
            <list type="bullet"><item><description><b>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xlsx" />,</description></item><item><description><b>application/vnd.ms-excel.sheet.macroenabled.12</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xlsm" />,</description></item><item><description><b>application/vnd.openxmlformats-officedocument.spreadsheetml.template</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xltx" />,</description></item><item><description><b>application/vnd.ms-excel.template.macroenabled.12</b> if <see cref="P:GemBox.Spreadsheet.XlsxSaveOptions.Type" /> is <see cref="F:GemBox.Spreadsheet.XlsxType.Xltm" />.</description></item></list></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLSX file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Password">
      <summary>
            Gets or sets the password used to protect / encrypt the workbook.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Type">
      <summary>
            Specifies type of generated file. Set this property only if you want to override default type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxType">
      <summary>
            OpenXML file type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xlsx">
      <summary>
            Excel 2007 XML Workbook.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xlsm">
      <summary>
            Excel 2007 XML Macro-Enabled Workbook.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xltx">
      <summary>
            Excel 2007 XML Template.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xltm">
      <summary>
            Excel 2007 XML Macro-Enabled Template.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XpsSaveOptions">
      <summary>
            Represents options for saving to XML Paper Specification file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XpsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.ContentType">
      <summary>
            Gets the content-type for XPS file format: <b>application/vnd.ms-xpsdocument</b>.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XPS file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AreaChart">
      <summary>
            Represents a chart whose series values are drawn using filled areas.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.AreaChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Area" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AreaChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AxisGridlines">
      <summary>
            Represents an axis major or minor gridlines.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.AxisGridlines.Delete">
      <summary>
            Deletes gridlines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.AxisGridlines.IsVisible">
      <summary>
            Gets or sets a value indicating whether gridlines are visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.AxisGridlines.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.AxisGridlines" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.AxisGridlines" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AxisLabelsPosition">
      <summary>
            Represents the possible positions for axis labels.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.None">
      <summary>
            Axis labels are not drawn.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.NextToAxis">
      <summary>
            Axis labels are next to the axis.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.Low">
      <summary>
            Axis labels are at the low end of the perpendicular axis.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.High">
      <summary>
        <para>Axis labels are at the high end of the perpendicular axis.</para>
        <para>This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.AxisLabelsPosition.NextToAxis" />.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.AxisType">
      <summary>
            Represents an axis type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisType.Category">
      <summary>
            Axis type used for categories.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisType.Date">
      <summary>
        <para>Axis type used for categories which are dates / times.</para>
        <para>This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Category" />.</para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.AxisType.Value">
      <summary>
            Axis type used for series values.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.BarChart">
      <summary>
            Represents a chart whose series values are drawn using horizontal rectangles.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Bar" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.BarChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.CategoryAxis">
      <summary>
            Represents an axis used for categories.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.CategoryAxis.AxisType">
      <summary>
            Gets the axis type for <see cref="T:GemBox.Spreadsheet.Charts.CategoryAxis" /> which is <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Category" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartAxes">
      <summary>
            Represents chart axes.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxes.Delete">
      <summary>
            Deletes axes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.Horizontal">
      <summary>
            Gets the horizontal chart axis.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.HorizontalCategory">
      <summary>
            Gets the horizontal chart axis as category axis, if horizontal chart axis is category axis; otherwise <see langword="null" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.HorizontalDate">
      <summary>
            Gets the horizontal chart axis as date axis, if horizontal chart axis is date axis; otherwise <see langword="null" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.HorizontalValue">
      <summary>
            Gets the horizontal chart axis as value axis, if horizontal chart axis is value axis; otherwise <see langword="null" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.IsVisible">
      <summary>
            Gets or sets a value indicating whether any axis is visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxes.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxes" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxes" /> instance.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.Vertical">
      <summary>
            Gets the vertical chart axis.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.VerticalCategory">
      <summary>
            Gets the vertical chart axis as category axis, if vertical chart axis is category axis; otherwise <see langword="null" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.VerticalDate">
      <summary>
            Gets the vertical chart axis as date axis, if vertical chart axis is date axis; otherwise <see langword="null" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxes.VerticalValue">
      <summary>
            Gets the vertical chart axis as value axis, if vertical chart axis is value axis; otherwise <see langword="null" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartAxis">
      <summary>
            Represents a base class for all chart axis types.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType">
      <summary>
            Gets the <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> of this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.ChangeAxisType``1">
      <summary>
            Changes the type of the axis.
            </summary>
      <typeparam name="TChartAxis">New type of the axis.</typeparam>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance of <typeparamref name="TChartAxis" /> type, if this instance is not of <typeparamref name="TChartAxis" /> type; otherwise, this instance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.ChangeAxisType(GemBox.Spreadsheet.Charts.AxisType)">
      <summary>
            Changes the type of the axis.
            </summary>
      <param name="axisType">New type of the axis.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance with <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> equal to <paramref name="axisType" />, if <paramref name="axisType" /> is not equal to <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.AxisType" /> of this instance; otherwise, this instance.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.Delete">
      <summary>
            Deletes axis.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.IsVisible">
      <summary>
            Gets or sets a value indicating whether axis is visible.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.LabelsPosition">
      <summary>
            Gets or sets the axis labels position.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MajorGridlines">
      <summary>
            Gets the major gridlines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MajorTickMarkType">
      <summary>
            Gets or sets the major tick marks position.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MinorGridlines">
      <summary>
            Gets the minor gridlines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.MinorTickMarkType">
      <summary>
            Gets or sets the minor tick marks position.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormat">
      <summary>
            Gets or sets the number format used for formatting axis value labels. 
            If <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource" /> is <see langword="true" />, then number format from chart's source data (cells) will be used to format axis value labels as explained in remarks.
            Setting this property, sets <see cref="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource" /> to <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.NumberFormatLinkedToSource">
      <summary>
            Gets or sets a value indicating whether number format from chart's source data (cells) will be used to format axis value labels.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.ReverseOrder">
      <summary>
        <para>Gets or sets a value indicating whether values on the axis shall be reversed so they go from maximum to minimum.</para>
        <para>This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is always exported as <see langword="false" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartAxis.Title">
      <summary>
            Gets the axis title.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartAxis.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartAxis" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartGrouping">
      <summary>
            Represents the grouping of a chart series for each category in a chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.Standard">
      <summary>
            Chart series are drawn on the value axis. Not applicable for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.Clustered">
      <summary>
            Chart series are drawn next to each other along the category axis. Applicable only for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.Stacked">
      <summary>
        <para>Chart series are drawn next to each other on the value axis.</para>
        <para>Use it to compare the contribution of each value to a total across categories.</para>
        <para>
            This value is currently supported only by <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Standard" /> for all other chart types.
            </para>
      </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartGrouping.PercentStacked">
      <summary>
        <para>Chart series are drawn next to each other along the value axis and scaled to total 100%.</para>
        <para>Use it to compare the percentage that each value contributes to a total across categories.</para>
        <para>
            This value is currently not supported when exporting a chart to PDF, XPS or image file formats. This value is exported as <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Stacked" /> for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> and <see cref="T:GemBox.Spreadsheet.Charts.BarChart" /> and as <see cref="F:GemBox.Spreadsheet.Charts.ChartGrouping.Standard" /> for all other chart types.
            </para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartLegend">
      <summary>
            Represents a chart legend.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.AllowOverlap">
      <summary>
            Gets or sets a value indicating whether legend overlaps chart's plot area or resizes it.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartLegend.Delete">
      <summary>
            Deletes legend.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.IsVisible">
      <summary>
            Gets or sets a value indicating whether legend is visible.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartLegend.Position">
      <summary>
            Gets or sets the legend position.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartLegend.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartLegend" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ChartLegend" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartLegendPosition">
      <summary>
            Specifies the possible positions for a legend.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Right">
      <summary>
            Specifies that the legend shall be drawn at the right of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Top">
      <summary>
            Specifies that the legend shall be drawn at the top of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Bottom">
      <summary>
            Specifies that the legend shall be drawn at the bottom of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.Left">
      <summary>
            Specifies that the legend shall be drawn at the left of the chart.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartLegendPosition.TopRight">
      <summary>
            Specifies that the legend shall be drawn at the top right of the chart.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartSeries">
      <summary>
            Represents a single chart series.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.Delete">
      <summary>
            Deletes the series.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.DisplayName">
      <summary>
            Gets the series display name. If <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Name" /> is direct value, then <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Name" /> value is returned; otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.Name" /> is a cell reference, then referenced cell value is returned. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Index">
      <summary>
            Gets the index of this <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> instance in the parent <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.IsLegendEntryVisible">
      <summary>
            Gets or sets a value indicating whether legend entry for this series instance is visible.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Name">
      <summary>
            Gets or sets the series name as direct value (for example, 'My series') or as a reference to a cell with value (for example, '=Sheet1!A1').
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.SetValues(System.Collections.IEnumerable)">
      <summary>
            Sets the chart series values.
            </summary>
      <param name="values">The chart series values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.SetValues(System.Object[])">
      <summary>
            Sets the chart series values.
            </summary>
      <param name="values">The chart series values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeries.ToString">
      <summary>
            Returns the <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.DisplayName" /> value.
            </summary>
      <returns>
            The <see cref="P:GemBox.Spreadsheet.Charts.ChartSeries.DisplayName" /> value.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.Values">
      <summary>
            Gets the chart series values.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeries.ValuesReference">
      <summary>
            Gets or sets the chart series values as a cell range reference (for example, 'Sheet1!A1:D1'). Values from cells in the referenced range will be used as values of this series.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> objects.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">
      <summary>
            Adds a new empty series to the chart.
            </summary>
      <returns>A new empty series added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.Collections.IEnumerable)">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.Object[])">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add(System.String,System.String)">
      <summary>
            Adds a new series with specified name and values reference to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="valuesReference">The series values reference.</param>
      <returns>A new series with specified name and values reference added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Clear">
      <summary>
                    Removes all items from the <see cref="T:System.Collections.IList" />.
                </summary>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.IList" /> is read-only. 
                </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Count">
      <summary>
                    Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
                </summary>
      <returns>
                    The number of elements contained in the <see cref="T:System.Collections.ICollection" />.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.GetEnumerator">
      <summary>
                    Returns an enumerator that iterates through the collection.
                </summary>
      <returns>
                    A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />. 
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" /> from which to get the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" />.</param>
      <returns>The <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Move(System.Int32,System.Int32)">
      <summary>
            Moves the series at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.RemoveAt(System.Int32)">
      <summary>
                    Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
                </summary>
      <param name="index">
                    The zero-based index of the item to remove. 
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. 
                </exception>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.IList" /> is read-only.
                
                    -or- 
                
                    The <see cref="T:System.Collections.IList" /> has a fixed size. 
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
                    Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
                </summary>
      <param name="array">
                    The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
                </param>
      <param name="index">
                    The zero-based index in <paramref name="array" /> at which copying begins. 
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. 
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. 
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.
                
                    -or- 
                <paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.
                
                    -or- 
                
                    The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />. 
                </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
                    Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
                </summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#ICollection#SyncRoot">
      <summary>
                    Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
                </summary>
      <returns>
                    An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    Returns an enumerator that iterates through a collection.
                </summary>
      <returns>
                    An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Add(System.Object)">
      <summary>
            Not supported. Use one of <see cref="O:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">ChartSeriesCollection.Add</see> overloads.
            </summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
      <returns>
            The position into which the new element was inserted.
            </returns>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="O:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">ChartSeriesCollection.Add</see> overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Contains(System.Object)">
      <summary>
                    Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
                </summary>
      <param name="value">
                    The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. 
                </param>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
                    Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
                </summary>
      <param name="value">
                    The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />. 
                </param>
      <returns>
                    The index of <paramref name="value" /> if found in the list; otherwise, -1.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
            Not supported. Use one of <see cref="O:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">ChartSeriesCollection.Add</see> overloads.
            </summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="O:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">ChartSeriesCollection.Add</see> overloads.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#IsFixedSize">
      <summary>
                    Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
                </summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#IsReadOnly">
      <summary>
                    Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
                </summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
            Gets the element at the specified index. Setting element is not supported.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.NotSupportedException">Setting element is not supported. Use one of <see cref="O:GemBox.Spreadsheet.Charts.ChartSeriesCollection.Add">ChartSeriesCollection.Add</see> overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection.System#Collections#IList#Remove(System.Object)">
      <summary>
                    Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
                </summary>
      <param name="value">
                    The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />. 
                </param>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.IList" /> is read-only.
                
                    -or- 
                
                    The <see cref="T:System.Collections.IList" /> has a fixed size. 
                </exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">
      <summary>
            Represents a collection of series of specific type which derives from <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> type.
            </summary>
      <typeparam name="T">A <see cref="T:GemBox.Spreadsheet.Charts.ChartSeries" /> derived type.</typeparam>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">
      <summary>
            Adds a new empty series to the chart.
            </summary>
      <returns>A new empty series added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add(System.String,System.Collections.IEnumerable)">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add(System.String,System.Object[])">
      <summary>
            Adds a new series with specified name and values to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="values">The series values.</param>
      <returns>A new series with specified name and values added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add(System.String,System.String)">
      <summary>
            Adds a new series with specified name and values reference to the chart.
            </summary>
      <param name="name">The series name.</param>
      <param name="valuesReference">The series values reference.</param>
      <returns>A new series with specified name and values reference added to the chart.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Clear">
      <summary>
                    Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. 
                </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Count">
      <summary>
                    Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <returns>
                    The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.GetEnumerator">
      <summary>
                    Returns an enumerator that iterates through the collection.
                </summary>
      <returns>
                    A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
                </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Item(System.Int32)">
      <summary>
            Gets the <typeparamref name="T" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">ChartSeriesCollection&lt;T&gt;</see>. 
            </summary>
      <param name="index">The zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">ChartSeriesCollection&lt;T&gt;</see> from which to get the <typeparamref name="T" />.</param>
      <returns>The <typeparamref name="T" /> that is stored at the zero-based index of the <see cref="T:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1">ChartSeriesCollection&lt;T&gt;</see>.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Move(System.Int32,System.Int32)">
      <summary>
            Moves the series at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.RemoveAt(System.Int32)">
      <summary>
                    Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
                </summary>
      <param name="index">
                    The zero-based index of the item to remove.
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>
            Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.
            </summary>
      <param name="item">The <typeparamref name="T" /> to add to the <see cref="T:System.Collections.Generic.IList`1">IList&lt;T&gt;</see>.</param>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>
                    Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
                </summary>
      <param name="item">
                    The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>
                    Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
                </summary>
      <param name="array">
                    The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.
                </param>
      <param name="arrayIndex">
                    The zero-based index in <paramref name="array" /> at which copying begins.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.
                
                    -or-
                <paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.
                
                    -or-
                
                    The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.
                
                    -or-
                
                    Type <paramref name="T" /> cannot be cast automatically to the type of the destination <paramref name="array" />.
                </exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>
                    Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
                </summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>
                    Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <param name="item">
                    The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.
                </param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
                </returns>
      <exception cref="T:System.NotSupportedException">
                    The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
                </exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
      <summary>
                    Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
                </summary>
      <param name="item">
                    The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.
                </param>
      <returns>
                    The index of <paramref name="item" /> if found in the list; otherwise, -1.
                </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>
            Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <typeparamref name="T" /> to insert into the <see cref="T:System.Collections.Generic.IList`1">IList&lt;T&gt;</see>.</param>
      <exception cref="T:System.NotSupportedException">Not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>
            Gets the item at the specified index. Setting item is not supported.
            </summary>
      <param name="index">The zero-based index of the item to get.</param>
      <returns>The item at the specified index.</returns>
      <exception cref="T:System.NotSupportedException">Setting item is not supported. Use one of <see cref="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.Add">ChartSeriesCollection&lt;T&gt;.Add</see> method or one of its overloads.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartSeriesCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    Returns an enumerator that iterates through a collection.
                </summary>
      <returns>
                    An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
                </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartTitle">
      <summary>
            Represents a chart or axis title.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.AllowOverlap">
      <summary>
            Gets or sets a value indicating whether title overlaps chart's plot area or resizes it.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartTitle.Delete">
      <summary>
            Deletes the title.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.Direction">
      <summary>
            Gets or sets the title text direction.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.DisplayText">
      <summary>
            Gets the title display text. If <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.IsVisible" /> is <see langword="false" />, then <see cref="F:System.String.Empty" /> is returned;
            otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.Text" /> is direct value, then <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.Text" /> value is returned; 
            otherwise, if <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.Text" /> is a cell reference, then referenced cell value is returned;
            otherwise, default title is returned.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.IsVisible">
      <summary>
            Gets or sets a value indicating whether title is visible.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ChartTitle.Text">
      <summary>
            Gets or sets the title text as direct value (for example, 'My chart title') or as a reference to a cell with value (for example, '=Sheet1!A1'). 
            If set value is not <see langword="null" /> nor <see cref="F:System.String.Empty" />, then <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.IsVisible" /> is set to <see langword="true" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ChartTitle.ToString">
      <summary>
            Returns the <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.DisplayText" /> value.
            </summary>
      <returns>
            The <see cref="P:GemBox.Spreadsheet.Charts.ChartTitle.DisplayText" /> value.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartTitleDirection">
      <summary>
            Represents chart or axis title text direction.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Horizontal">
      <summary>
            Text is horizontal.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Rotate90">
      <summary>
            Text is vertical (each line is 90 degrees rotated clockwise, so it goes from top to bottom; each next line is to the left from the previous one).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Rotate270">
      <summary>
            Text is vertical (each line is 270 degrees rotated clockwise, so it goes from bottom to top; each next line is to the right from the previous one).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartTitleDirection.Stacked">
      <summary>
            Text is vertical (one letter on top of another).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ChartType">
      <summary>
            Represents a chart type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Column">
      <summary>
            Chart type whose series values are drawn using vertical rectangles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Bar">
      <summary>
            Chart type whose series values are drawn using horizontal rectangles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Line">
      <summary>
            Chart type whose series values are drawn using lines.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Area">
      <summary>
            Chart type whose series values are drawn using filled areas.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.ChartType.Pie">
      <summary>
            Chart type whose single series values are drawn as filled arcs in a pie-like form.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ColumnChart">
      <summary>
            Represents a chart whose series values are drawn using vertical rectangles.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.ColumnChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Column" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ColumnChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.DateAxis">
      <summary>
        <para>Represents an axis used for categories which are dates / times.</para>
        <para>This axis type is currently not supported when exporting a chart to PDF, XPS or image file formats. This axis is exported as <see cref="T:GemBox.Spreadsheet.Charts.CategoryAxis" />.</para>
      </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.AxisType">
      <summary>
            Gets the axis type for <see cref="T:GemBox.Spreadsheet.Charts.DateAxis" /> which is <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Date" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.BaseUnit">
      <summary>
            Gets or sets the smallest time unit that is represented on the date axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MajorTimeUnit">
      <summary>
            Gets or sets the time unit for <see cref="P:GemBox.Spreadsheet.Charts.DateAxis.MajorUnit">major tick marks</see>.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MajorUnit">
      <summary>
            Gets or sets the distance between major ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.Maximum">
      <summary>
            Gets or sets the maximum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.Minimum">
      <summary>
            Gets or sets the minimum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MinorTimeUnit">
      <summary>
            Gets or sets the time unit for <see cref="P:GemBox.Spreadsheet.Charts.DateAxis.MinorUnit">minor tick marks</see>.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.DateAxis.MinorUnit">
      <summary>
            Gets or sets the distance between minor ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode">
      <summary>
            Specifies the possible ways to display empty cell values (cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> equal to <see langword="null" />).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode.Zero">
      <summary>
            Specifies that empty cell values shall be treated as zero.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode.Gaps">
      <summary>
            Specifies that empty cell values shall be left as a gap.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.EmptyCellDisplayMode.ConnectDataPointsWithLine">
      <summary>
            Specifies that empty cell values shall be spanned with a line.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ExcelChart">
      <summary>
            Represents a base class for all charts in a worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabels">
      <summary>
            Gets the chart's category labels.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.CategoryLabelsReference">
      <summary>
            Gets or sets the chart's category labels as a cell range reference (for example, 'Sheet1!A1:D1'). Values from cells in the referenced range will be used as category labels.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ChangeChartType``1">
      <summary>
            Changes the chart to a different type of chart.
            </summary>
      <typeparam name="TChart">Type of chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type to change the chart to.</typeparam>
      <returns>A chart of different type.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ChangeChartType(GemBox.Spreadsheet.Charts.ChartType)">
      <summary>
            Changes the chart to a different type of chart.
            </summary>
      <param name="chartType">Type of chart to change the chart to.</param>
      <returns>A chart of different type.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.ChartType">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.Charts.ChartType" /> of this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Legend">
      <summary>
            Gets the chart's legend.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(GemBox.Spreadsheet.CellRange,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <param name="excludeSeriesNames">if set to <see langword="true" />, series names won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Parameter <paramref name="range" /> is <see langword="null" /> or not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SelectData(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Selects the data for the chart.
            </summary>
      <param name="range">The cell range which contains data for the chart.</param>
      <param name="switchRowColumn">if set to <see langword="true" /> category labels will be in first column (not row), series names will be in first row (not column) and series values will be in columns (not rows).</param>
      <param name="excludeCategoryLabels">if set to <see langword="true" />, category labels won't be resolved from <paramref name="range" />.</param>
      <param name="excludeSeriesNames">if set to <see langword="true" />, series names won't be resolved from <paramref name="range" />.</param>
      <exception cref="T:GemBox.Spreadsheet.SpreadsheetException">Either chart is in invalid state or <paramref name="range" /> parameter is not valid.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Series">
      <summary>
            Gets the chart's series.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SetCategoryLabels(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Sets the chart's category labels.
            </summary>
      <param name="categoryLabels">The chart's category labels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryLabels" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.SetCategoryLabels(System.String[])">
      <summary>
            Sets the chart's category labels.
            </summary>
      <param name="categoryLabels">The chart's category labels.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.ShowEmptyCellsAs">
      <summary>
            Gets or sets the value which indicates how empty cells (cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> equal to <see langword="null" />) shall be plotted on the chart.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ExcelChart.Title">
      <summary>
            Gets the chart's title.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChart.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ExcelChartCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart">charts</see>s in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position (top-left corner).</param>
      <param name="positionTo">The chart's end position (bottom-right corner).</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,GemBox.Spreadsheet.AnchorCell,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFrom">The chart's position.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,GemBox.Spreadsheet.Charts.ChartGrouping,System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="chartGrouping">The chart's series grouping (clustered, stacked or 100% stacked).</param>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add(GemBox.Spreadsheet.Charts.ChartType,System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="chartType">Type of the chart.</param>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(System.Double,System.Double,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which doesn't move nor sizes with cells.
            </summary>
      <param name="left">The distance of the left edge of the chart from the left edge of the worksheet.</param>
      <param name="top">The distance of the top edge of the chart from the top edge of the worksheet.</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which doesn't move nor sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(System.String,System.Double,System.Double,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Adds a new chart to the worksheet which moves but doesn't size with cells.
            </summary>
      <param name="positionFromCell">The chart's position (for example, "A1").</param>
      <param name="width">The chart's width.</param>
      <param name="height">The chart's height.</param>
      <param name="unit">The length unit in which all length parameters are specified.</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves but doesn't size with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Add``1(System.String,System.String)">
      <summary>
            Adds a new chart to the worksheet which moves and sizes with cells.
            </summary>
      <param name="positionFromCell">The chart's position (top-left corner) (for example, "A1").</param>
      <param name="positionToCell">The chart's end position (bottom-right corner) (for example, "B2").</param>
      <typeparam name="T">The type of the chart deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> type.</typeparam>
      <returns>A new chart added to the worksheet which moves and sizes with cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.ExcelChartCollection.Get``1(System.Int32)">
      <summary>
            Gets the chart at the specified index and casts it to the specified chart subtype deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" />.
            </summary>
      <param name="index">The zero-based index of the chart to get.</param>
      <typeparam name="T">The chart subtype deriving from <see cref="T:GemBox.Spreadsheet.Charts.ExcelChart" /> to cast the chart to.</typeparam>
      <returns>The chart at the specified index casted to <typeparamref name="T" /> type.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or is equal to or greater than <see cref="P:GemBox.Spreadsheet.ExcelDrawingCollection`1.Count" />.</exception>
      <exception cref="T:System.InvalidCastException">A chart at the specified index cannot be cast to type <typeparamref name="T" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.LineChart">
      <summary>
            Represents a chart whose series values are drawn using lines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.Axes">
      <summary>
            Gets the chart axes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.LineChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Line" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.Grouping">
      <summary>
            Gets or sets the chart grouping.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.Series">
      <summary>
            Gets the chart's series.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChart.ShowMarkers">
      <summary>
        <para>Gets or sets a value indicating whether markers will be shown on series points.</para>
        <para>Value is resolved from first series. If first series has marker than all newly added series will also have marker.</para>
        <para>When setting a value, value is propagated to all series.</para>
      </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.LineChartSeries">
      <summary>
            Represents a single <see cref="T:GemBox.Spreadsheet.Charts.LineChart" /> series.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.LineChartSeries.Marker">
      <summary>
            Gets the marker.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.LineChartSeriesCollection">
      <summary>
            Represents a collection of <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" /> objects.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.Marker">
      <summary>
            Represents a marker for <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.Marker.Delete">
      <summary>
            Deletes the marker from series.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.Marker.MarkerType">
      <summary>
            Gets or sets the marker type.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.Marker.Size">
      <summary>
            Gets or sets the marker size.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.Charts.Marker.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.Marker" /> instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:GemBox.Spreadsheet.Charts.Marker" /> instance.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.MarkerType">
      <summary>
            Represents a marker symbol which will be used on each <see cref="T:GemBox.Spreadsheet.Charts.LineChartSeries" /> data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Auto">
      <summary>
            Specifies an automatic symbol shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.None">
      <summary>
            Specifies nothing shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Square">
      <summary>
            Specifies a square shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Diamond">
      <summary>
            Specifies a diamond shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Triangle">
      <summary>
            Specifies a triangle shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.X">
      <summary>
            Specifies an X shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Star">
      <summary>
            Specifies a star shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Dot">
      <summary>
            Specifies a dot shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Dash">
      <summary>
            Specifies a dash shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Circle">
      <summary>
            Specifies a circle shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Plus">
      <summary>
            Specifies a plus shall be drawn at each data point.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.MarkerType.Picture">
      <summary>
            Specifies a picture shall be drawn at each data point.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.PieChart">
      <summary>
            Represents a chart whose single series values are drawn as filled arcs in a pie-like form.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.PieChart.ChartType">
      <summary>
            Gets the chart type for <see cref="T:GemBox.Spreadsheet.Charts.PieChart" /> which is <see cref="F:GemBox.Spreadsheet.Charts.ChartType.Pie" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.TickMarkType">
      <summary>
            Represents the possible positions for axis major and minor tick marks.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.None">
      <summary>
            No tick marks.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.Inside">
      <summary>
            Tick marks are inside the plot area.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.Outside">
      <summary>
            Tick marks are outside the plot area.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TickMarkType.Cross">
      <summary>
            Tick marks cross the axis.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.TimeUnit">
      <summary>
            Represents a unit of time used by <see cref="T:GemBox.Spreadsheet.Charts.DateAxis" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TimeUnit.Days">
      <summary>
            Chart data is shown in days.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TimeUnit.Months">
      <summary>
            Chart data is shown in months.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.Charts.TimeUnit.Years">
      <summary>
            Chart data is shown in years.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.Charts.ValueAxis">
      <summary>
            Represents an axis used for series values.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.AxisType">
      <summary>
            Gets the axis type for <see cref="T:GemBox.Spreadsheet.Charts.ValueAxis" /> which is <see cref="F:GemBox.Spreadsheet.Charts.AxisType.Value" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.MajorUnit">
      <summary>
            Gets or sets the distance between major ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number or is smaller than MinorUnit.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.Maximum">
      <summary>
            Gets or sets the maximum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is smaller than Minimum.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.Minimum">
      <summary>
            Gets or sets the minimum value of the axis or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is greater than Maximum.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.Charts.ValueAxis.MinorUnit">
      <summary>
            Gets or sets the distance between minor ticks or <see langword="null" /> if value should be automatically calculated based on chart's data.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not positive number or is greater than MajorUnit.</exception>
    </member>
  </members>
</doc>